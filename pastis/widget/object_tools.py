'''
2012-04-25 Code debugging
'''

from Tkinter import *
import tkMessageBox


def save_target(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox

	#if self.v11.get() and self.compute_prior(self.v12.get(), [self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], self.v10.get()) == 0 :
	#	tkMessageBox.showerror("Error", "First mass value out of prior.\n Please put a correct value within the prior range")
	#if self.v21.get() and self.compute_prior(self.v22.get(), [self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], self.v20.get()) == 0 :
	#	tkMessageBox.showerror("Error", "First radius value out of prior.\n Please put a correct value within the prior range")
	if self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First Teff value out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First Logg value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First Metallicity value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First distance value out of prior.\n Please put a correct value within the prior range")
	elif self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First vsini value out of prior.\n Please put a correct value within the prior range")
	elif self.v81.get() and self.compute_prior(self.v82.get(), [self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], self.v80.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First systemic RV value out of prior.\n Please put a correct value within the prior range")
	elif self.v91.get() and self.compute_prior(self.v92.get(), [self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get()], self.v90.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First E(B-V) value out of prior.\n Please put a correct value within the prior range")
	else : 
		#self.tstar = {'mact' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get()], 'R' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get()], 'teff' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get()],'logg' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get()], 'z' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get()], 'dist' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get()], 'vsini' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get()], 'v0' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get()]}
		self.tstar = {'teff' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],'logg' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'z' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'dist' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'vsini' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], 'v0' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], 'ebmv' : [self.v90.get(), self.v91.get(), self.v92.get(), self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get(),self.v98.get()]}
		self.islight = 0
		if save_edit:
			self.list_objects[self.select] = self.tstar
		else:
			self.list_objects['target'+str(self.nb_target)] = self.tstar
			self.object_list.append('target'+str(self.nb_target))
			self.star_list.append('target'+str(self.nb_target))
			self.nb_target+=1
			self.refresh_state()
			self.refresh_list()

		if quit: self.wtarget.destroy()

def save_star(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox
	
	
	if self.v11.get() and self.compute_prior(self.v12.get(), [self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], self.v10.get()) == 0 and self.infodict['randomstart'] == 0 :
		tkMessageBox.showerror("Error", "First Initial mass value out of prior.\n Please put a correct value within the prior range")
	elif self.v21.get() and self.compute_prior(self.v22.get(), [self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], self.v20.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First Log Age value out of prior.\n Please put a correct value within the prior range")
	elif self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First Metallicity value out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First distance value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First vsini value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First systemic RV value out of prior.\n Please put a correct value within the prior range")
	elif self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First E(B-V) value out of prior.\n Please put a correct value within the prior range")
	else : 
		self.star = {'minit' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], 'logage' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], 'z' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],'dist' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'vsini' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'v0' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'ebmv' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get(),self.v78.get()]}
		if self.v20.get() == 0.:
			tkMessageBox.showerror("Error", "Log Age cannot be zero\n Default value (logage = 9.0) saved instead")
			self.star['logage'][0] = 9.
		self.islight = 0
		if save_edit:
			self.list_objects[self.select] = self.star
		else:	
			self.list_objects['star'+str(self.nb_star)] = self.star
			self.object_list.append('star'+str(self.nb_star))
			self.star_list.append('star'+str(self.nb_star))
			self.nb_star+=1
			self.refresh_state()
			self.refresh_list()

		if quit: self.wstar.destroy()

def save_planet(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox

	if self.v11.get() and self.compute_prior(self.v12.get(), [self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], self.v10.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First planetary mass value out of prior.\n Please put a correct value within the prior range")
	elif self.v21.get() and self.compute_prior(self.v22.get(), [self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], self.v20.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First planetary radius value out of prior.\n Please put a correct value within the prior range")
	elif self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First albedo value out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First redistribution factor value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First period value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First inclination value out of prior.\n Please put a correct value within the prior range")
	elif self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First eccentricity value out of prior.\n Please put a correct value within the prior range")
	elif self.v81.get() and self.compute_prior(self.v82.get(), [self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], self.v80.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First argument of periastron value out of prior.\n Please put a correct value within the prior range")
	elif self.v98.get() and self.v91.get() and self.compute_prior(self.v92.get(), [self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get()], self.v90.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First transit epoch value out of prior.\n Please put a correct value within the prior range")
	elif self.v98.get()==0 and self.v101.get() and self.compute_prior(self.v102.get(), [self.v103.get(), self.v104.get(), self.v105.get(), self.v106.get(), self.v107.get()], self.v100.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First periastron epoch value out of prior.\n Please put a correct value within the prior range")
	else : 
		if self.v98.get() : self.planet = {'Mp' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], 'Rp' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], 'albedo' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],'f' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'P' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'incl' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'ecc' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], 'omega' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], 'T0' : [self.v90.get(), self.v91.get(), self.v92.get(), self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get()]}
		else : self.planet  =  {'Mp' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], 'Rp' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], 'albedo' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],'f' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'P' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'incl' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'ecc' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], 'omega' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], 'Tp' : [self.v100.get(), self.v101.get(), self.v102.get(), self.v103.get(), self.v104.get(), self.v105.get(), self.v106.get(), self.v107.get()]}
		self.islight = 0
		if save_edit:
			self.list_objects[self.select] = self.planet
		else:	
			self.list_objects['planet'+str(self.nb_planet)] = self.planet
			self.planet_list.append('planet'+str(self.nb_planet))
			self.nb_planet+=1
			self.refresh_state()
			self.refresh_list()

		if quit: self.wplanet.destroy()

def save_binary(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox

	if self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First period value out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First inclination value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First eccentricity value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First argument of periastron value out of prior.\n Please put a correct value within the prior range")
	elif self.v78.get() and self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First transit epoch value out of prior.\n Please put a correct value within the prior range")
	elif self.v78.get()==0 and self.v81.get() and self.compute_prior(self.v82.get(), [self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], self.v80.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First periastron epoch value out of prior.\n Please put a correct value within the prior range")
	else :
		if self.v78.get() : self.binary = {'star1' : self.v1.get(), 'star2' : self.v2.get(), 'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], 'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'T0' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()]}
		else : self.binary  =  {'star1' : self.v1.get(), 'star2' : self.v2.get(), 'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], 'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'Tp' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()]}
		self.islight = 0
		if save_edit:
			self.list_objects[self.select] = self.binary
		else:
			self.list_objects['binary'+str(self.nb_binary)] = self.binary
			self.object_list.append('binary'+str(self.nb_binary))
			self.complex_object_list.append('binary'+str(self.nb_binary))
			self.nb_binary+=1
			self.refresh_state()
			self.refresh_list()

		if quit: self.wbinary.destroy()

def save_triple(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox

	if self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First period value out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First inclination value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First eccentricity value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First argument of periastron value out of prior.\n Please put a correct value within the prior range")
	elif self.v78.get() and self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First transit epoch value out of prior.\n Please put a correct value within the prior range")
	elif self.v78.get()==0 and self.v81.get() and self.compute_prior(self.v82.get(), [self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], self.v80.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First periastron epoch value out of prior.\n Please put a correct value within the prior range")
	else :
		if self.v78.get() : self.triple = {'object1' : self.v1.get(), 'object2' : self.v2.get(), 'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], 'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'T0' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()]}
		else : self.triple  =  {'object1' : self.v1.get(), 'object2' : self.v2.get(), 'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], 'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], 'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], 'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], 'Tp' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()]}

		self.islight = 0
		if save_edit:
			self.list_objects[self.select] = self.triple
		else:
			self.list_objects['triple'+str(self.nb_triple)] = self.triple
			self.nb_triple+=1
			self.refresh_list()

		if quit: self.wtriple.destroy()

def save_plansys(self, quit = None, save_edit = None):
	import numpy as n
	if self.v3.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get()}
	elif self.v4.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get()}
	elif self.v5.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get()}
	elif self.v6.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get()}
	elif self.v7.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get(),'planet5' : self.v6.get()}
	elif self.v8.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get(),'planet5' : self.v6.get(),'planet6' : self.v7.get()}
	elif self.v9.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get(),'planet5' : self.v6.get(),'planet6' : self.v7.get(),'planet7' : self.v8.get()}
	elif self.v10.get() == 'None' : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get(),'planet5' : self.v6.get(),'planet6' : self.v7.get(),'planet7' : self.v8.get(),'planet8' : self.v9.get()}
	else : self.plansys = {'star' : self.v1.get(), 'planet1' : self.v2.get(),'planet2' : self.v3.get(),'planet3' : self.v4.get(),'planet4' : self.v5.get(),'planet5' : self.v6.get(),'planet6' : self.v7.get(),'planet7' : self.v8.get(),'planet8' : self.v9.get(),'planet9' : self.v10.get()}
	self.islight = 0
	if save_edit:
		self.list_objects[self.select] = self.plansys
	else:
		self.list_objects['plansys'+str(self.nb_plansys)] = self.plansys
		self.object_list.append('plansys'+str(self.nb_plansys))
		self.complex_object_list.append('plansys'+str(self.nb_plansys))
		self.nb_plansys+=1
		self.refresh_state()
		self.refresh_list()

	if quit: self.wplansys.destroy()



def save_fitobs(self, quit = None, save_edit = None):
	import numpy as n
	import tkMessageBox

	if self.v11.get() and self.compute_prior(self.v12.get(), [self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()], self.v10.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First system scale value out of prior.\n Please put a correct value within the prior range")
	elif self.v21.get() and self.compute_prior(self.v22.get(), [self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()], self.v20.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First radius ratio value out of prior.\n Please put a correct value within the prior range")
	elif self.v31.get() and self.compute_prior(self.v32.get(), [self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()], self.v30.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First period out of prior.\n Please put a correct value within the prior range")
	elif self.v41.get() and self.compute_prior(self.v42.get(), [self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()], self.v40.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First inclination value out of prior.\n Please put a correct value within the prior range")
	elif self.v51.get() and self.compute_prior(self.v52.get(), [self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()], self.v50.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First eccentricity value out of prior.\n Please put a correct value within the prior range")
	elif self.v61.get() and self.compute_prior(self.v62.get(), [self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()], self.v60.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First argument of periastron value out of prior.\n Please put a correct value within the prior range")
	elif self.v71.get() and self.compute_prior(self.v72.get(), [self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()], self.v70.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First albedo value out of prior.\n Please put a correct value within the prior range")
	elif self.v81.get() and self.compute_prior(self.v82.get(), [self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()], self.v80.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First redistribution facteur of periastron value out of prior.\n Please put a correct value within the prior range")
	elif self.v98.get() and self.v91.get() and self.compute_prior(self.v92.get(), [self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get()], self.v90.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First transit epoch value out of prior.\n Please put a correct value within the prior range")
	elif self.v98.get()==0 and self.v101.get() and self.compute_prior(self.v102.get(), [self.v103.get(), self.v104.get(), self.v105.get(), self.v106.get(), self.v107.get()], self.v100.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First periastron epoch value out of prior.\n Please put a correct value within the prior range")
	elif self.v111.get() and self.compute_prior(self.v112.get(), [self.v113.get(), self.v114.get(), self.v115.get(), self.v116.get(), self.v117.get()], self.v110.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First LD linear coeff value out of prior.\n Please put a correct value within the prior range")
	elif self.v121.get() and self.compute_prior(self.v122.get(), [self.v123.get(), self.v124.get(), self.v125.get(), self.v126.get(), self.v127.get()], self.v120.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First LD quadratic coeff value out of prior.\n Please put a correct value within the prior range")
	elif self.v131.get() and self.compute_prior(self.v132.get(), [self.v133.get(), self.v134.get(), self.v135.get(), self.v136.get(), self.v137.get()], self.v130.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First gravity darkening coeff value out of prior.\n Please put a correct value within the prior range")
	elif self.v141.get() and self.compute_prior(self.v142.get(), [self.v143.get(), self.v144.get(), self.v145.get(), self.v146.get(), self.v147.get()], self.v140.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First RV semi-amplitude value out of prior.\n Please put a correct value within the prior range")
	elif self.v151.get() and self.compute_prior(self.v152.get(), [self.v153.get(), self.v154.get(), self.v155.get(), self.v156.get(), self.v157.get()], self.v150.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First mass ratio value out of prior.\n Please put a correct value within the prior range")
	elif self.v161.get() and self.compute_prior(self.v162.get(), [self.v163.get(), self.v164.get(), self.v165.get(), self.v166.get(), self.v167.get()], self.v160.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First systemic RV value out of prior.\n Please put a correct value within the prior range")
	elif self.v171.get() and self.compute_prior(self.v172.get(), [self.v173.get(), self.v174.get(), self.v175.get(), self.v176.get(), self.v177.get()], self.v170.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First vsini value out of prior.\n Please put a correct value within the prior range")
	elif self.v181.get() and self.compute_prior(self.v182.get(), [self.v183.get(), self.v184.get(), self.v185.get(), self.v186.get(), self.v187.get()], self.v180.get()) == 0 and self.infodict['randomstart'] == 0:
		tkMessageBox.showerror("Error", "First spin-orbit angle value out of prior.\n Please put a correct value within the prior range")
	else : 
		if self.v98.get() : self.fitobs = {'AR' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()],\
			'k' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()],\
			'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],\
			'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()],\
			'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()],\
			'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()],\
			'albedo' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()],\
			'f' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()],\
			'T0' : [self.v90.get(), self.v91.get(), self.v92.get(), self.v93.get(), self.v94.get(), self.v95.get(), self.v96.get(), self.v97.get()],\
			'ua' : [self.v110.get(), self.v111.get(), self.v112.get(), self.v113.get(), self.v114.get(), self.v115.get(), self.v116.get(), self.v117.get()],\
			'ub' : [self.v120.get(), self.v121.get(), self.v122.get(), self.v123.get(), self.v124.get(), self.v125.get(), self.v126.get(), self.v127.get()],\
			'gd' : [self.v130.get(), self.v131.get(), self.v132.get(), self.v133.get(), self.v134.get(), self.v135.get(), self.v136.get(), self.v137.get()],\
			'K' : [self.v140.get(), self.v141.get(), self.v142.get(), self.v143.get(), self.v144.get(), self.v145.get(), self.v146.get(), self.v147.get()],\
			'Mr' : [self.v150.get(), self.v151.get(), self.v152.get(), self.v153.get(), self.v154.get(), self.v155.get(), self.v156.get(), self.v157.get()],\
			'v0' : [self.v160.get(), self.v161.get(), self.v162.get(), self.v163.get(), self.v164.get(), self.v165.get(), self.v166.get(), self.v167.get()],\
			'vsini' : [self.v170.get(), self.v171.get(), self.v172.get(), self.v173.get(), self.v174.get(), self.v175.get(), self.v176.get(), self.v177.get()],\
			'lambda' : [self.v180.get(), self.v181.get(), self.v182.get(), self.v183.get(), self.v184.get(), self.v185.get(), self.v186.get(), self.v187.get()]}
		else : self.fitobs  =  {'AR' : [self.v10.get(), self.v11.get(), self.v12.get(), self.v13.get(), self.v14.get(), self.v15.get(), self.v16.get(), self.v17.get()],\
			'k' : [self.v20.get(), self.v21.get(), self.v22.get(), self.v23.get(), self.v24.get(), self.v25.get(), self.v26.get(), self.v27.get()],\
			'P' : [self.v30.get(), self.v31.get(), self.v32.get(), self.v33.get(), self.v34.get(), self.v35.get(), self.v36.get(), self.v37.get()],\
			'incl' : [self.v40.get(), self.v41.get(), self.v42.get(), self.v43.get(), self.v44.get(), self.v45.get(), self.v46.get(), self.v47.get()],\
			'ecc' : [self.v50.get(), self.v51.get(), self.v52.get(), self.v53.get(), self.v54.get(), self.v55.get(), self.v56.get(), self.v57.get()],\
			'omega' : [self.v60.get(), self.v61.get(), self.v62.get(), self.v63.get(), self.v64.get(), self.v65.get(), self.v66.get(), self.v67.get()],\
			'albedo' : [self.v70.get(), self.v71.get(), self.v72.get(), self.v73.get(), self.v74.get(), self.v75.get(), self.v76.get(), self.v77.get()],\
			'f' : [self.v80.get(), self.v81.get(), self.v82.get(), self.v83.get(), self.v84.get(), self.v85.get(), self.v86.get(), self.v87.get()],\
			'Tp' : [self.v100.get(), self.v101.get(), self.v102.get(), self.v103.get(), self.v104.get(), self.v105.get(), self.v106.get(), self.v107.get()],\
			'ua' : [self.v110.get(), self.v111.get(), self.v112.get(), self.v113.get(), self.v114.get(), self.v115.get(), self.v116.get(), self.v117.get()],\
			'ub' : [self.v120.get(), self.v121.get(), self.v122.get(), self.v123.get(), self.v124.get(), self.v125.get(), self.v126.get(), self.v127.get()],\
			'gd' : [self.v130.get(), self.v131.get(), self.v132.get(), self.v133.get(), self.v134.get(), self.v135.get(), self.v136.get(), self.v137.get()],\
			'K' : [self.v140.get(), self.v141.get(), self.v142.get(), self.v143.get(), self.v144.get(), self.v145.get(), self.v146.get(), self.v147.get()],\
			'Mr' : [self.v150.get(), self.v151.get(), self.v152.get(), self.v153.get(), self.v154.get(), self.v155.get(), self.v156.get(), self.v157.get()],\
			'v0' : [self.v160.get(), self.v161.get(), self.v162.get(), self.v163.get(), self.v164.get(), self.v165.get(), self.v166.get(), self.v167.get()],\
			'vsini' : [self.v170.get(), self.v171.get(), self.v172.get(), self.v173.get(), self.v174.get(), self.v175.get(), self.v176.get(), self.v177.get()],\
			'lambda' : [self.v180.get(), self.v181.get(), self.v182.get(), self.v183.get(), self.v184.get(), self.v185.get(), self.v186.get(), self.v187.get()]}
		self.islight = 1
		if save_edit:
			self.list_objects[self.select] = self.fitobs
		else:	
			self.list_objects['fitobs'+str(self.nb_fitobs)] = self.fitobs
			self.fitobs_list.append('fitobs'+str(self.nb_fitobs))
			self.nb_fitobs+=1
			self.close_state()
			self.refresh_list()
			self.refresh_state()

		if quit: self.wfit.destroy()





################################################################################################################
################################################################################################################
################################################################################################################


def define_target(self, edit = None) :
	self.wtarget=Toplevel()
	Label(self.wtarget, text='Define a new target star',font=('Times', 16, 'bold')).grid(row=0, columnspan = 9)
	Label(self.wtarget, text='Mass [Msun]', anchor=W).grid(row=2)
	Label(self.wtarget, text='Radius [Rsun]', anchor=W).grid(row=3)
	Label(self.wtarget, text='Teff [K]', anchor=W).grid(row=4)
	Label(self.wtarget, text='Logg', anchor=W).grid(row=5)
	Label(self.wtarget, text='Metallicity z', anchor=W).grid(row=6)
	Label(self.wtarget, text='distance [pc]', anchor=W).grid(row=7)
	Label(self.wtarget, text='vsini [km/s]', anchor=W).grid(row=8)
	Label(self.wtarget, text='v0 [km/s]', anchor=W).grid(row=9)
	Label(self.wtarget, text='E(B-V) [mag]', anchor=W).grid(row=10)
	
	Label(self.wtarget, text='Parameter').grid(row=1, column=0)
	Label(self.wtarget, text='Value').grid(row=1, column=1)
	Label(self.wtarget, text='jump ?').grid(row=1, column=2)
	Label(self.wtarget, text='prior').grid(row=1, column=3)
	Label(self.wtarget, text='Value1').grid(row=1, column=4)
	Label(self.wtarget, text='Value2').grid(row=1, column=5)
	Label(self.wtarget, text='Value3').grid(row=1, column=6)
	Label(self.wtarget, text='Value4').grid(row=1, column=7)
	Label(self.wtarget, text='File').grid(row=1, column=8)
	
	self.v10 = DoubleVar()
	self.v11 = IntVar()
	self.v12 = StringVar()
	self.v13 = DoubleVar()
	self.v14 = DoubleVar()
	self.v15 = DoubleVar()
	self.v16 = DoubleVar()
	self.v17 = StringVar()
	self.v20 = DoubleVar()
	self.v21 = IntVar()
	self.v22 = StringVar()
	self.v23 = DoubleVar()
	self.v24 = DoubleVar()
	self.v25 = DoubleVar()
	self.v26 = DoubleVar()
	self.v27 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar() 
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v80 = DoubleVar()
	self.v81 = IntVar()
	self.v82 = StringVar()
	self.v83 = DoubleVar()
	self.v84 = DoubleVar()
	self.v85 = DoubleVar()
	self.v86 = DoubleVar()
	self.v87 = StringVar()
	self.v90 = DoubleVar()
	self.v91 = IntVar()
	self.v92 = StringVar()
	self.v93 = DoubleVar()
	self.v94 = DoubleVar()
	self.v95 = DoubleVar()
	self.v96 = DoubleVar()
	self.v97 = StringVar()
	self.v98 = IntVar()

	if edit:
	        #self.v10.set(self.list_objects[self.select]['mact'][0])
	        #self.v11.set(self.list_objects[self.select]['mact'][1])
		#self.v12.set(self.list_objects[self.select]['mact'][2])
	        #self.v13.set(self.list_objects[self.select]['mact'][3])
	        #self.v14.set(self.list_objects[self.select]['mact'][4])
	        #self.v20.set(self.list_objects[self.select]['R'][0])
	        #self.v21.set(self.list_objects[self.select]['R'][1])
	        #self.v22.set(self.list_objects[self.select]['R'][2])
	        #self.v23.set(self.list_objects[self.select]['R'][3])
	        #self.v24.set(self.list_objects[self.select]['R'][4])
		self.v30.set(self.list_objects[self.select]['teff'][0])
		self.v31.set(self.list_objects[self.select]['teff'][1])
		self.v32.set(self.list_objects[self.select]['teff'][2])
		self.v33.set(self.list_objects[self.select]['teff'][3])
		self.v34.set(self.list_objects[self.select]['teff'][4])
		self.v35.set(self.list_objects[self.select]['teff'][5])
		self.v36.set(self.list_objects[self.select]['teff'][6])
		self.v37.set(self.list_objects[self.select]['teff'][7])
		self.v40.set(self.list_objects[self.select]['logg'][0])
		self.v41.set(self.list_objects[self.select]['logg'][1])
		self.v42.set(self.list_objects[self.select]['logg'][2])
		self.v43.set(self.list_objects[self.select]['logg'][3])
		self.v44.set(self.list_objects[self.select]['logg'][4])
		self.v45.set(self.list_objects[self.select]['logg'][5])
		self.v46.set(self.list_objects[self.select]['logg'][6])
		self.v47.set(self.list_objects[self.select]['logg'][7])
		self.v50.set(self.list_objects[self.select]['z'][0])
		self.v51.set(self.list_objects[self.select]['z'][1])
		self.v52.set(self.list_objects[self.select]['z'][2])
		self.v53.set(self.list_objects[self.select]['z'][3])
		self.v54.set(self.list_objects[self.select]['z'][4])
		self.v55.set(self.list_objects[self.select]['z'][5])
		self.v56.set(self.list_objects[self.select]['z'][6])
		self.v57.set(self.list_objects[self.select]['z'][7])
		self.v60.set(self.list_objects[self.select]['dist'][0])
		self.v61.set(self.list_objects[self.select]['dist'][1])
		self.v62.set(self.list_objects[self.select]['dist'][2])
		self.v63.set(self.list_objects[self.select]['dist'][3])
		self.v64.set(self.list_objects[self.select]['dist'][4])
		self.v65.set(self.list_objects[self.select]['dist'][5])
		self.v66.set(self.list_objects[self.select]['dist'][6])
		self.v67.set(self.list_objects[self.select]['dist'][7])
		self.v70.set(self.list_objects[self.select]['vsini'][0])
		self.v71.set(self.list_objects[self.select]['vsini'][1]) 
		self.v72.set(self.list_objects[self.select]['vsini'][2])
		self.v73.set(self.list_objects[self.select]['vsini'][3])
		self.v74.set(self.list_objects[self.select]['vsini'][4])
		self.v75.set(self.list_objects[self.select]['vsini'][5])
		self.v76.set(self.list_objects[self.select]['vsini'][6])
		self.v77.set(self.list_objects[self.select]['vsini'][7])
		self.v80.set(self.list_objects[self.select]['v0'][0])
		self.v81.set(self.list_objects[self.select]['v0'][1])
		self.v82.set(self.list_objects[self.select]['v0'][2])
		self.v83.set(self.list_objects[self.select]['v0'][3])
		self.v84.set(self.list_objects[self.select]['v0'][4])
		self.v85.set(self.list_objects[self.select]['v0'][5])
		self.v86.set(self.list_objects[self.select]['v0'][6])
		self.v87.set(self.list_objects[self.select]['v0'][7])
		self.v90.set(self.list_objects[self.select]['ebmv'][0])
		self.v91.set(self.list_objects[self.select]['ebmv'][1])
		self.v92.set(self.list_objects[self.select]['ebmv'][2])
		self.v93.set(self.list_objects[self.select]['ebmv'][3])
		self.v94.set(self.list_objects[self.select]['ebmv'][4])
		self.v95.set(self.list_objects[self.select]['ebmv'][5])
		self.v96.set(self.list_objects[self.select]['ebmv'][6])
		self.v97.set(self.list_objects[self.select]['ebmv'][7])
		self.v98.set(self.list_objects[self.select]['ebmv'][8]) 
	
	else:
		self.v12.set('Normal')
		self.v22.set('Normal')
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')
		self.v82.set('Normal')
		self.v92.set('Normal')

	Entry(self.wtarget, textvariable=self.v10, width=10, bg='white', state = 'disabled').grid(row=2, column=1)
	Checkbutton(self.wtarget, variable=self.v11, state = 'disabled').grid(row=2, column=2)
	OptionMenu(self.wtarget, self.v12, *self.list_prior_type).grid(row=2, column=3)
	Entry(self.wtarget, textvariable=self.v13, width=10, bg='white', state = 'disabled').grid(row=2, column=4)
	Entry(self.wtarget, textvariable=self.v14, width=10, bg='white', state = 'disabled').grid(row=2, column=5)
	Entry(self.wtarget, textvariable=self.v15, width=10, bg='white', state = 'disabled').grid(row=2, column=6)
	Entry(self.wtarget, textvariable=self.v16, width=10, bg='white', state = 'disabled').grid(row=2, column=7)
	Entry(self.wtarget, textvariable=self.v17, width=10, bg='white', state = 'disabled').grid(row=2, column=8)

	Entry(self.wtarget, textvariable=self.v20, width=10, bg='white', state = 'disabled').grid(row=3, column=1)
	Checkbutton(self.wtarget, variable=self.v21, state = 'disabled').grid(row=3, column=2)
	OptionMenu(self.wtarget, self.v22, *self.list_prior_type).grid(row=3, column=3)
	Entry(self.wtarget, textvariable=self.v23, width=10, bg='white', state = 'disabled').grid(row=3, column=4)
	Entry(self.wtarget, textvariable=self.v24, width=10, bg='white', state = 'disabled').grid(row=3, column=5)
	Entry(self.wtarget, textvariable=self.v25, width=10, bg='white', state = 'disabled').grid(row=3, column=6)
	Entry(self.wtarget, textvariable=self.v26, width=10, bg='white', state = 'disabled').grid(row=3, column=7)
	Entry(self.wtarget, textvariable=self.v27, width=10, bg='white', state = 'disabled').grid(row=3, column=8)
	
	Entry(self.wtarget, textvariable=self.v30, width=10, bg='white').grid(row=4, column=1)
	Checkbutton(self.wtarget, variable=self.v31).grid(row=4, column=2)
	OptionMenu(self.wtarget, self.v32, *self.list_prior_type).grid(row=4, column=3)
	Entry(self.wtarget, textvariable=self.v33, width=10, bg='white').grid(row=4, column=4)
	Entry(self.wtarget, textvariable=self.v34, width=10, bg='white').grid(row=4, column=5)
	Entry(self.wtarget, textvariable=self.v35, width=10, bg='white').grid(row=4, column=6)
	Entry(self.wtarget, textvariable=self.v36, width=10, bg='white').grid(row=4, column=7)
	Entry(self.wtarget, textvariable=self.v37, width=10, bg='white').grid(row=4, column=8)
	
	Entry(self.wtarget, textvariable=self.v40, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wtarget, variable=self.v41).grid(row=5, column=2)
	OptionMenu(self.wtarget, self.v42, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wtarget, textvariable=self.v43, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wtarget, textvariable=self.v44, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wtarget, textvariable=self.v45, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wtarget, textvariable=self.v46, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wtarget, textvariable=self.v47, width=10, bg='white').grid(row=5, column=8)

	Entry(self.wtarget, textvariable=self.v50, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wtarget, variable=self.v51).grid(row=6, column=2)
	OptionMenu(self.wtarget, self.v52, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wtarget, textvariable=self.v53, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wtarget, textvariable=self.v54, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wtarget, textvariable=self.v55, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wtarget, textvariable=self.v56, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wtarget, textvariable=self.v57, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wtarget, textvariable=self.v60, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wtarget, variable=self.v61).grid(row=7, column=2)
	OptionMenu(self.wtarget, self.v62, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wtarget, textvariable=self.v63, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wtarget, textvariable=self.v64, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wtarget, textvariable=self.v65, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wtarget, textvariable=self.v66, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wtarget, textvariable=self.v67, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wtarget, textvariable=self.v70, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wtarget, variable=self.v71).grid(row=8, column=2)
	OptionMenu(self.wtarget, self.v72, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wtarget, textvariable=self.v73, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wtarget, textvariable=self.v74, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wtarget, textvariable=self.v75, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wtarget, textvariable=self.v76, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wtarget, textvariable=self.v77, width=10, bg='white').grid(row=8, column=8)

	Entry(self.wtarget, textvariable=self.v80, width=10, bg='white').grid(row=9, column=1)
	Checkbutton(self.wtarget, variable=self.v81).grid(row=9, column=2)
	OptionMenu(self.wtarget, self.v82, *self.list_prior_type).grid(row=9, column=3)
	Entry(self.wtarget, textvariable=self.v83, width=10, bg='white').grid(row=9, column=4)
	Entry(self.wtarget, textvariable=self.v84, width=10, bg='white').grid(row=9, column=5)
	Entry(self.wtarget, textvariable=self.v85, width=10, bg='white').grid(row=9, column=6)
	Entry(self.wtarget, textvariable=self.v86, width=10, bg='white').grid(row=9, column=7)
	Entry(self.wtarget, textvariable=self.v87, width=10, bg='white').grid(row=9, column=8)
	
	Entry(self.wtarget, textvariable=self.v90, width=10, bg='white').grid(row=10, column=1)
	Checkbutton(self.wtarget, variable=self.v91).grid(row=10, column=2)
	OptionMenu(self.wtarget, self.v92, *self.list_prior_type).grid(row=10, column=3)
	Entry(self.wtarget, textvariable=self.v93, width=10, bg='white').grid(row=10, column=4)
	Entry(self.wtarget, textvariable=self.v94, width=10, bg='white').grid(row=10, column=5)
	Entry(self.wtarget, textvariable=self.v95, width=10, bg='white').grid(row=10, column=6)
	Entry(self.wtarget, textvariable=self.v96, width=10, bg='white').grid(row=10, column=7)
	Entry(self.wtarget, textvariable=self.v97, width=10, bg='white').grid(row=10, column=8)
	Checkbutton(self.wtarget, text='Model', variable=self.v98).grid(row=10, column=9)

	Button(self.wtarget, text='SAVE & QUIT', command=lambda: self.save_target(quit=1,save_edit=edit)).grid(row=11, column = 6)
	Button(self.wtarget, text='SAVE', command=lambda: self.save_target(save_edit=edit)).grid(row=11, column = 7)
	Button(self.wtarget, text='QUIT', command=self.wtarget.destroy).grid(row=11, column = 8)
	
def define_star(self, edit = None) :
	self.wstar=Toplevel()
	Label(self.wstar, text='Define a new blend star',font=('Times', 16, 'bold')).grid(row=0, columnspan = 9)
	Label(self.wstar, text='Initial mass [Msun]', anchor=W).grid(row=2)
	Label(self.wstar, text='LogAge', anchor=W).grid(row=3)
	Label(self.wstar, text='Metallicity z', anchor=W).grid(row=4)
	Label(self.wstar, text='distance [pc]', anchor=W).grid(row=5)
	Label(self.wstar, text='vsini [km/s]', anchor=W).grid(row=6)
	Label(self.wstar, text='v0 [km/s]', anchor=W).grid(row=7)
	Label(self.wstar, text='E(B-V) [mag]', anchor=W).grid(row=8)
	
	Label(self.wstar, text='Parameter').grid(row=1, column=0)
	Label(self.wstar, text='Value').grid(row=1, column=1)
	Label(self.wstar, text='jump ?').grid(row=1, column=2)
	Label(self.wstar, text='prior').grid(row=1, column=3)
	Label(self.wstar, text='Value1').grid(row=1, column=4)
	Label(self.wstar, text='Value2').grid(row=1, column=5)
	Label(self.wstar, text='Value3').grid(row=1, column=6)
	Label(self.wstar, text='Value4').grid(row=1, column=7)
	Label(self.wstar, text='File').grid(row=1, column=8)

	self.v10 = DoubleVar()
	self.v11 = IntVar()
	self.v12 = StringVar()
	self.v13 = DoubleVar()
	self.v14 = DoubleVar()
	self.v15 = DoubleVar()
	self.v16 = DoubleVar()
	self.v17 = StringVar()
	self.v20 = DoubleVar()
	self.v21 = IntVar()
	self.v22 = StringVar()
	self.v23 = DoubleVar()
	self.v24 = DoubleVar()
	self.v25 = DoubleVar()
	self.v26 = DoubleVar()
	self.v27 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar()
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v78 = IntVar()

	if edit:
		self.v10.set(self.list_objects[self.select]['minit'][0])
		self.v11.set(self.list_objects[self.select]['minit'][1])
		self.v12.set(self.list_objects[self.select]['minit'][2])
		self.v13.set(self.list_objects[self.select]['minit'][3])
		self.v14.set(self.list_objects[self.select]['minit'][4])
		self.v15.set(self.list_objects[self.select]['minit'][5])
		self.v16.set(self.list_objects[self.select]['minit'][6])
		self.v17.set(self.list_objects[self.select]['minit'][7])
		self.v20.set(self.list_objects[self.select]['logage'][0])
		self.v21.set(self.list_objects[self.select]['logage'][1])
		self.v22.set(self.list_objects[self.select]['logage'][2])
		self.v23.set(self.list_objects[self.select]['logage'][3])
		self.v24.set(self.list_objects[self.select]['logage'][4])
		self.v25.set(self.list_objects[self.select]['logage'][5])
		self.v26.set(self.list_objects[self.select]['logage'][6])
		self.v27.set(self.list_objects[self.select]['logage'][7])
		self.v30.set(self.list_objects[self.select]['z'][0])
		self.v31.set(self.list_objects[self.select]['z'][1])
		self.v32.set(self.list_objects[self.select]['z'][2])
		self.v33.set(self.list_objects[self.select]['z'][3])
		self.v34.set(self.list_objects[self.select]['z'][4])
		self.v35.set(self.list_objects[self.select]['z'][5])
		self.v36.set(self.list_objects[self.select]['z'][6])
		self.v37.set(self.list_objects[self.select]['z'][7])
		self.v40.set(self.list_objects[self.select]['dist'][0])
		self.v41.set(self.list_objects[self.select]['dist'][1])
		self.v42.set(self.list_objects[self.select]['dist'][2])
		self.v43.set(self.list_objects[self.select]['dist'][3])
		self.v44.set(self.list_objects[self.select]['dist'][4])
		self.v45.set(self.list_objects[self.select]['dist'][5])
		self.v46.set(self.list_objects[self.select]['dist'][6])
		self.v47.set(self.list_objects[self.select]['dist'][7])
		self.v50.set(self.list_objects[self.select]['vsini'][0])
		self.v51.set(self.list_objects[self.select]['vsini'][1])
		self.v52.set(self.list_objects[self.select]['vsini'][2])
		self.v53.set(self.list_objects[self.select]['vsini'][3])
		self.v54.set(self.list_objects[self.select]['vsini'][4])
		self.v55.set(self.list_objects[self.select]['vsini'][5])
		self.v56.set(self.list_objects[self.select]['vsini'][6])
		self.v57.set(self.list_objects[self.select]['vsini'][7])
		self.v60.set(self.list_objects[self.select]['v0'][0])
		self.v61.set(self.list_objects[self.select]['v0'][1])
		self.v62.set(self.list_objects[self.select]['v0'][2])
		self.v63.set(self.list_objects[self.select]['v0'][3])
		self.v64.set(self.list_objects[self.select]['v0'][4])
		self.v65.set(self.list_objects[self.select]['v0'][5])
		self.v66.set(self.list_objects[self.select]['v0'][6])
		self.v67.set(self.list_objects[self.select]['v0'][7])
		self.v70.set(self.list_objects[self.select]['ebmv'][0])
		self.v71.set(self.list_objects[self.select]['ebmv'][1])
		self.v72.set(self.list_objects[self.select]['ebmv'][2])
		self.v73.set(self.list_objects[self.select]['ebmv'][3])
		self.v74.set(self.list_objects[self.select]['ebmv'][4])
		self.v75.set(self.list_objects[self.select]['ebmv'][5])
		self.v76.set(self.list_objects[self.select]['ebmv'][6])
		self.v77.set(self.list_objects[self.select]['ebmv'][7])
		self.v78.set(self.list_objects[self.select]['ebmv'][8]) 

	else:
		self.v12.set('Normal')
		self.v22.set('Normal')
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')

	Entry(self.wstar, textvariable=self.v10, width=10, bg='white').grid(row=2, column=1)
	Checkbutton(self.wstar, variable=self.v11).grid(row=2, column=2)
	OptionMenu(self.wstar, self.v12, *self.list_prior_type).grid(row=2, column=3)
	Entry(self.wstar, textvariable=self.v13, width=10, bg='white').grid(row=2, column=4)
	Entry(self.wstar, textvariable=self.v14, width=10, bg='white').grid(row=2, column=5)
	Entry(self.wstar, textvariable=self.v15, width=10, bg='white').grid(row=2, column=6)
	Entry(self.wstar, textvariable=self.v16, width=10, bg='white').grid(row=2, column=7)
	Entry(self.wstar, textvariable=self.v17, width=10, bg='white').grid(row=2, column=8)

	Entry(self.wstar, textvariable=self.v20, width=10, bg='white').grid(row=3, column=1)
	Checkbutton(self.wstar, variable=self.v21).grid(row=3, column=2)
	OptionMenu(self.wstar, self.v22, *self.list_prior_type).grid(row=3, column=3)
	Entry(self.wstar, textvariable=self.v23, width=10, bg='white').grid(row=3, column=4)
	Entry(self.wstar, textvariable=self.v24, width=10, bg='white').grid(row=3, column=5)
	Entry(self.wstar, textvariable=self.v25, width=10, bg='white').grid(row=3, column=6)
	Entry(self.wstar, textvariable=self.v26, width=10, bg='white').grid(row=3, column=7)
	Entry(self.wstar, textvariable=self.v27, width=10, bg='white').grid(row=3, column=8)
	
	Entry(self.wstar, textvariable=self.v30, width=10, bg='white').grid(row=4, column=1)
	Checkbutton(self.wstar, variable=self.v31).grid(row=4, column=2)
	OptionMenu(self.wstar, self.v32, *self.list_prior_type).grid(row=4, column=3)
	Entry(self.wstar, textvariable=self.v33, width=10, bg='white').grid(row=4, column=4)
	Entry(self.wstar, textvariable=self.v34, width=10, bg='white').grid(row=4, column=5)
	Entry(self.wstar, textvariable=self.v35, width=10, bg='white').grid(row=4, column=6)
	Entry(self.wstar, textvariable=self.v36, width=10, bg='white').grid(row=4, column=7)
	Entry(self.wstar, textvariable=self.v37, width=10, bg='white').grid(row=4, column=8)
	
	Entry(self.wstar, textvariable=self.v40, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wstar, variable=self.v41).grid(row=5, column=2)
	OptionMenu(self.wstar, self.v42, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wstar, textvariable=self.v43, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wstar, textvariable=self.v44, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wstar, textvariable=self.v45, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wstar, textvariable=self.v46, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wstar, textvariable=self.v47, width=10, bg='white').grid(row=5, column=8)

	Entry(self.wstar, textvariable=self.v50, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wstar, variable=self.v51).grid(row=6, column=2)
	OptionMenu(self.wstar, self.v52, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wstar, textvariable=self.v53, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wstar, textvariable=self.v54, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wstar, textvariable=self.v55, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wstar, textvariable=self.v56, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wstar, textvariable=self.v57, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wstar, textvariable=self.v60, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wstar, variable=self.v61).grid(row=7, column=2)
	OptionMenu(self.wstar, self.v62, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wstar, textvariable=self.v63, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wstar, textvariable=self.v64, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wstar, textvariable=self.v65, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wstar, textvariable=self.v66, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wstar, textvariable=self.v67, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wstar, textvariable=self.v70, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wstar, variable=self.v71).grid(row=8, column=2)
	OptionMenu(self.wstar, self.v72, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wstar, textvariable=self.v73, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wstar, textvariable=self.v74, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wstar, textvariable=self.v75, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wstar, textvariable=self.v76, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wstar, textvariable=self.v77, width=10, bg='white').grid(row=8, column=8)
	Checkbutton(self.wstar, text='Model', variable=self.v78).grid(row=8, column=9)

	Button(self.wstar, text='SAVE & QUIT', command=lambda: self.save_star(quit=1,save_edit=edit)).grid(row=9, column = 6)
	Button(self.wstar, text='SAVE', command=lambda: self.save_star(save_edit=edit)).grid(row=9, column = 7)
	Button(self.wstar, text='QUIT', command=self.wstar.destroy).grid(row=9, column = 8)
 
def define_planet(self, edit = None) :
	self.wplanet=Toplevel()
	Label(self.wplanet, text='Define a new planet',font=('Times', 16, 'bold')).grid(row=0, columnspan = 10)
	Label(self.wplanet, text='Planet mass [Mjup]', anchor=W, justify='left').grid(row=2)
	Label(self.wplanet, text='Planet radius [Rjup]', anchor=W, justify='left').grid(row=3)
	Label(self.wplanet, text='Albedo', anchor=W, justify='left').grid(row=4)
	Label(self.wplanet, text='Redistribution factor', anchor=W, justify='left').grid(row=5)
	Label(self.wplanet, text='Period [days]', anchor=W, justify='left').grid(row=6)
	Label(self.wplanet, text='Inclination [deg]', anchor=W, justify='left').grid(row=7)
	Label(self.wplanet, text='Eccentricity', anchor=W, justify='left').grid(row=8)
	Label(self.wplanet, text='Periastron argument [deg]', anchor=W, justify='left').grid(row=9)
	Label(self.wplanet, text='Transit epoch [BJD]', anchor=W, justify='left').grid(row=10)
	Label(self.wplanet, text='Periastron epoch [BJD]', anchor=W, justify='left').grid(row=11)
	
	Label(self.wplanet, text='Parameter').grid(row=1, column=0)
	Label(self.wplanet, text='Value').grid(row=1, column=1)
	Label(self.wplanet, text='jump ?').grid(row=1, column=2)
	Label(self.wplanet, text='prior').grid(row=1, column=3)
	Label(self.wplanet, text='Value1').grid(row=1, column=4)
	Label(self.wplanet, text='Value2').grid(row=1, column=5)
	Label(self.wplanet, text='Value3').grid(row=1, column=6)
	Label(self.wplanet, text='Value4').grid(row=1, column=7)
	Label(self.wplanet, text='File').grid(row=1, column=8)
	Label(self.wplanet, text='select').grid(row=1, column=9)
	
	self.v10 = DoubleVar()
	self.v11 = IntVar()
	self.v12 = StringVar()
	self.v13 = DoubleVar()
	self.v14 = DoubleVar()
	self.v15 = DoubleVar()
	self.v16 = DoubleVar()
	self.v17 = StringVar()
	self.v20 = DoubleVar()
	self.v21 = IntVar()
	self.v22 = StringVar()
	self.v23 = DoubleVar()
	self.v24 = DoubleVar()
	self.v25 = DoubleVar()
	self.v26 = DoubleVar()
	self.v27 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar() 
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v80 = DoubleVar()
	self.v81 = IntVar()
	self.v82 = StringVar()
	self.v83 = DoubleVar()
	self.v84 = DoubleVar()
	self.v85 = DoubleVar()
	self.v86 = DoubleVar()
	self.v87 = StringVar()
	self.v90 = DoubleVar()
	self.v91 = IntVar()
	self.v92 = StringVar()
	self.v93 = DoubleVar()
	self.v94 = DoubleVar()
	self.v95 = DoubleVar()
	self.v96 = DoubleVar()
	self.v97 = StringVar()
	self.v98 = IntVar()
	self.v100 = DoubleVar()
	self.v101 = IntVar()
	self.v102 = StringVar()
	self.v103 = DoubleVar()
	self.v104 = DoubleVar()
	self.v105 = DoubleVar()
	self.v106 = DoubleVar()
	self.v107 = StringVar()

	if edit:
		self.v10.set(self.list_objects[self.select]['Mp'][0])
		self.v11.set(self.list_objects[self.select]['Mp'][1])
		self.v12.set(self.list_objects[self.select]['Mp'][2])
		self.v13.set(self.list_objects[self.select]['Mp'][3])
		self.v14.set(self.list_objects[self.select]['Mp'][4])
		self.v15.set(self.list_objects[self.select]['Mp'][5])
		self.v16.set(self.list_objects[self.select]['Mp'][6])
		self.v17.set(self.list_objects[self.select]['Mp'][7])
		self.v20.set(self.list_objects[self.select]['Rp'][0])
		self.v21.set(self.list_objects[self.select]['Rp'][1])
		self.v22.set(self.list_objects[self.select]['Rp'][2])
		self.v23.set(self.list_objects[self.select]['Rp'][3])
		self.v24.set(self.list_objects[self.select]['Rp'][4])
		self.v25.set(self.list_objects[self.select]['Rp'][5])
		self.v26.set(self.list_objects[self.select]['Rp'][6])
		self.v27.set(self.list_objects[self.select]['Rp'][7])
		self.v30.set(self.list_objects[self.select]['albedo'][0])
		self.v31.set(self.list_objects[self.select]['albedo'][1])
		self.v32.set(self.list_objects[self.select]['albedo'][2])
		self.v33.set(self.list_objects[self.select]['albedo'][3])
		self.v34.set(self.list_objects[self.select]['albedo'][4])
		self.v35.set(self.list_objects[self.select]['albedo'][5])
		self.v36.set(self.list_objects[self.select]['albedo'][6])
		self.v37.set(self.list_objects[self.select]['albedo'][7])
		self.v40.set(self.list_objects[self.select]['f'][0])
		self.v41.set(self.list_objects[self.select]['f'][1])
		self.v42.set(self.list_objects[self.select]['f'][2])
		self.v43.set(self.list_objects[self.select]['f'][3])
		self.v44.set(self.list_objects[self.select]['f'][4])
		self.v45.set(self.list_objects[self.select]['f'][5])
		self.v46.set(self.list_objects[self.select]['f'][6])
		self.v47.set(self.list_objects[self.select]['f'][7])
		self.v50.set(self.list_objects[self.select]['P'][0])
		self.v51.set(self.list_objects[self.select]['P'][1])
		self.v52.set(self.list_objects[self.select]['P'][2])
		self.v53.set(self.list_objects[self.select]['P'][3])
		self.v54.set(self.list_objects[self.select]['P'][4])
		self.v55.set(self.list_objects[self.select]['P'][5])
		self.v56.set(self.list_objects[self.select]['P'][6])
		self.v57.set(self.list_objects[self.select]['P'][7])
		self.v60.set(self.list_objects[self.select]['incl'][0])
		self.v61.set(self.list_objects[self.select]['incl'][1])
		self.v62.set(self.list_objects[self.select]['incl'][2])
		self.v63.set(self.list_objects[self.select]['incl'][3])
		self.v64.set(self.list_objects[self.select]['incl'][4])
		self.v65.set(self.list_objects[self.select]['incl'][5])
		self.v66.set(self.list_objects[self.select]['incl'][6])
		self.v67.set(self.list_objects[self.select]['incl'][7])
		self.v70.set(self.list_objects[self.select]['ecc'][0])
		self.v71.set(self.list_objects[self.select]['ecc'][1]) 
		self.v72.set(self.list_objects[self.select]['ecc'][2])
		self.v73.set(self.list_objects[self.select]['ecc'][3])
		self.v74.set(self.list_objects[self.select]['ecc'][4])
		self.v75.set(self.list_objects[self.select]['ecc'][5])
		self.v76.set(self.list_objects[self.select]['ecc'][6])
		self.v77.set(self.list_objects[self.select]['ecc'][7])
		self.v80.set(self.list_objects[self.select]['omega'][0])
		self.v81.set(self.list_objects[self.select]['omega'][1])
		self.v82.set(self.list_objects[self.select]['omega'][2])
		self.v83.set(self.list_objects[self.select]['omega'][3])
		self.v84.set(self.list_objects[self.select]['omega'][4])
		self.v85.set(self.list_objects[self.select]['omega'][5])
		self.v86.set(self.list_objects[self.select]['omega'][6])
		self.v87.set(self.list_objects[self.select]['omega'][7])

		if self.list_objects[self.select].has_key('T0'):
			self.v90.set(self.list_objects[self.select]['T0'][0])
			self.v91.set(self.list_objects[self.select]['T0'][1])
			self.v92.set(self.list_objects[self.select]['T0'][2])
			self.v93.set(self.list_objects[self.select]['T0'][3])
			self.v94.set(self.list_objects[self.select]['T0'][4])
			self.v95.set(self.list_objects[self.select]['T0'][5])
			self.v96.set(self.list_objects[self.select]['T0'][6])
			self.v97.set(self.list_objects[self.select]['T0'][7])
			self.v98.set(1)
			self.v102.set('Normal')
		elif self.list_objects[self.select].has_key('Tp'):
			self.v100.set(self.list_objects[self.select]['Tp'][0])
			self.v101.set(self.list_objects[self.select]['Tp'][1])
			self.v102.set(self.list_objects[self.select]['Tp'][2])
			self.v103.set(self.list_objects[self.select]['Tp'][3])
			self.v104.set(self.list_objects[self.select]['Tp'][4])
			self.v105.set(self.list_objects[self.select]['Tp'][5])
			self.v106.set(self.list_objects[self.select]['Tp'][6])
			self.v107.set(self.list_objects[self.select]['Tp'][7])
			self.v98.set(0)
			self.v92.set('Normal')

	else:
		self.v12.set('Normal')
		self.v22.set('Normal')
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')
		self.v82.set('Normal')
		self.v92.set('Normal')
		self.v102.set('Normal')

	Entry(self.wplanet, textvariable=self.v10, width=10, bg='white').grid(row=2, column=1)
	Checkbutton(self.wplanet, variable=self.v11).grid(row=2, column=2)
	OptionMenu(self.wplanet, self.v12, *self.list_prior_type).grid(row=2, column=3)
	Entry(self.wplanet, textvariable=self.v13, width=10, bg='white').grid(row=2, column=4)
	Entry(self.wplanet, textvariable=self.v14, width=10, bg='white').grid(row=2, column=5)
	Entry(self.wplanet, textvariable=self.v15, width=10, bg='white').grid(row=2, column=6)
	Entry(self.wplanet, textvariable=self.v16, width=10, bg='white').grid(row=2, column=7)
	Entry(self.wplanet, textvariable=self.v17, width=10, bg='white').grid(row=2, column=8)

	Entry(self.wplanet, textvariable=self.v20, width=10, bg='white').grid(row=3, column=1)
	Checkbutton(self.wplanet, variable=self.v21).grid(row=3, column=2)
	OptionMenu(self.wplanet, self.v22, *self.list_prior_type).grid(row=3, column=3)
	Entry(self.wplanet, textvariable=self.v23, width=10, bg='white').grid(row=3, column=4)
	Entry(self.wplanet, textvariable=self.v24, width=10, bg='white').grid(row=3, column=5)
	Entry(self.wplanet, textvariable=self.v25, width=10, bg='white').grid(row=3, column=6)
	Entry(self.wplanet, textvariable=self.v26, width=10, bg='white').grid(row=3, column=7)
	Entry(self.wplanet, textvariable=self.v27, width=10, bg='white').grid(row=3, column=8)
	
	Entry(self.wplanet, textvariable=self.v30, width=10, bg='white').grid(row=4, column=1)
	Checkbutton(self.wplanet, variable=self.v31).grid(row=4, column=2)
	OptionMenu(self.wplanet, self.v32, *self.list_prior_type).grid(row=4, column=3)
	Entry(self.wplanet, textvariable=self.v33, width=10, bg='white').grid(row=4, column=4)
	Entry(self.wplanet, textvariable=self.v34, width=10, bg='white').grid(row=4, column=5)
	Entry(self.wplanet, textvariable=self.v35, width=10, bg='white').grid(row=4, column=6)
	Entry(self.wplanet, textvariable=self.v36, width=10, bg='white').grid(row=4, column=7)
	Entry(self.wplanet, textvariable=self.v37, width=10, bg='white').grid(row=4, column=8)
	
	Entry(self.wplanet, textvariable=self.v40, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wplanet, variable=self.v41).grid(row=5, column=2)
	OptionMenu(self.wplanet, self.v42, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wplanet, textvariable=self.v43, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wplanet, textvariable=self.v44, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wplanet, textvariable=self.v45, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wplanet, textvariable=self.v46, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wplanet, textvariable=self.v47, width=10, bg='white').grid(row=5, column=8)

	Entry(self.wplanet, textvariable=self.v50, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wplanet, variable=self.v51).grid(row=6, column=2)
	OptionMenu(self.wplanet, self.v52, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wplanet, textvariable=self.v53, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wplanet, textvariable=self.v54, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wplanet, textvariable=self.v55, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wplanet, textvariable=self.v56, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wplanet, textvariable=self.v57, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wplanet, textvariable=self.v60, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wplanet, variable=self.v61).grid(row=7, column=2)
	OptionMenu(self.wplanet, self.v62, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wplanet, textvariable=self.v63, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wplanet, textvariable=self.v64, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wplanet, textvariable=self.v65, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wplanet, textvariable=self.v66, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wplanet, textvariable=self.v67, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wplanet, textvariable=self.v70, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wplanet, variable=self.v71).grid(row=8, column=2)
	OptionMenu(self.wplanet, self.v72, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wplanet, textvariable=self.v73, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wplanet, textvariable=self.v74, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wplanet, textvariable=self.v75, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wplanet, textvariable=self.v76, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wplanet, textvariable=self.v77, width=10, bg='white').grid(row=8, column=8)

	Entry(self.wplanet, textvariable=self.v80, width=10, bg='white').grid(row=9, column=1)
	Checkbutton(self.wplanet, variable=self.v81).grid(row=9, column=2)
	OptionMenu(self.wplanet, self.v82, *self.list_prior_type).grid(row=9, column=3)
	Entry(self.wplanet, textvariable=self.v83, width=10, bg='white').grid(row=9, column=4)
	Entry(self.wplanet, textvariable=self.v84, width=10, bg='white').grid(row=9, column=5)
	Entry(self.wplanet, textvariable=self.v85, width=10, bg='white').grid(row=9, column=6)
	Entry(self.wplanet, textvariable=self.v86, width=10, bg='white').grid(row=9, column=7)
	Entry(self.wplanet, textvariable=self.v87, width=10, bg='white').grid(row=9, column=8)

	Entry(self.wplanet, textvariable=self.v90, width=10, bg='white').grid(row=10, column=1)
	Checkbutton(self.wplanet, variable=self.v91).grid(row=10, column=2)
	OptionMenu(self.wplanet, self.v92, *self.list_prior_type).grid(row=10, column=3)
	Entry(self.wplanet, textvariable=self.v93, width=10, bg='white').grid(row=10, column=4)
	Entry(self.wplanet, textvariable=self.v94, width=10, bg='white').grid(row=10, column=5)
	Entry(self.wplanet, textvariable=self.v95, width=10, bg='white').grid(row=10, column=6)
	Entry(self.wplanet, textvariable=self.v96, width=10, bg='white').grid(row=10, column=7)
	Entry(self.wplanet, textvariable=self.v97, width=10, bg='white').grid(row=10, column=8)
	Radiobutton(self.wplanet, variable=self.v98, value=1).grid(row=10, column=9)

	Entry(self.wplanet, textvariable=self.v100, width=10, bg='white').grid(row=11, column=1)
	Checkbutton(self.wplanet, variable=self.v101).grid(row=11, column=2)
	OptionMenu(self.wplanet, self.v102, *self.list_prior_type).grid(row=11, column=3)
	Entry(self.wplanet, textvariable=self.v103, width=10, bg='white').grid(row=11, column=4)
	Entry(self.wplanet, textvariable=self.v104, width=10, bg='white').grid(row=11, column=5)
	Entry(self.wplanet, textvariable=self.v105, width=10, bg='white').grid(row=11, column=6)
	Entry(self.wplanet, textvariable=self.v106, width=10, bg='white').grid(row=11, column=7)
	Entry(self.wplanet, textvariable=self.v107, width=10, bg='white').grid(row=11, column=8)
	Radiobutton(self.wplanet, variable=self.v98, value=0).grid(row=11, column=9)
	
	Button(self.wplanet, text='SAVE & QUIT', command=lambda: self.save_planet(quit=1,save_edit=edit)).grid(row=12, column = 6)
	Button(self.wplanet, text='SAVE', command=lambda: self.save_planet(save_edit=edit)).grid(row=12, column = 7)
	Button(self.wplanet, text='QUIT', command=self.wplanet.destroy).grid(row=12, column = 8)

def define_binary(self, edit = None) :
	self.wbinary=Toplevel()
	Label(self.wbinary, text='Define a new Binary',font=('Times', 16, 'bold')).grid(row=0, columnspan = 10)
	Label(self.wbinary, text='Star 1', anchor=W, justify='left').grid(row=2)
	Label(self.wbinary, text='Star 2', anchor=W, justify='left').grid(row=3)
	Label(self.wbinary, text='Period [days]', anchor=W, justify='left').grid(row=5)
	Label(self.wbinary, text='Inclination [deg]', anchor=W, justify='left').grid(row=6)
	Label(self.wbinary, text='Eccentricity', anchor=W, justify='left').grid(row=7)
	Label(self.wbinary, text='Periastron argument [deg]', anchor=W, justify='left').grid(row=8)
	Label(self.wbinary, text='Transit epoch [BJD]', anchor=W, justify='left').grid(row=9)
	Label(self.wbinary, text='Periastron epoch [BJD]', anchor=W, justify='left').grid(row=10)
	
	Label(self.wbinary, text='Parameter').grid(row=4, column=0)
	Label(self.wbinary, text='Value').grid(row=4, column=1)
	Label(self.wbinary, text='jump ?').grid(row=4, column=2)
	Label(self.wbinary, text='prior').grid(row=4, column=3)
	Label(self.wbinary, text='Value1').grid(row=4, column=4)
	Label(self.wbinary, text='Value2').grid(row=4, column=5)
	Label(self.wbinary, text='Value3').grid(row=4, column=6)
	Label(self.wbinary, text='Value4').grid(row=4, column=7)
	Label(self.wbinary, text='File').grid(row=4, column=8)
	Label(self.wbinary, text='select').grid(row=4, column=9)

	self.v1 = StringVar()
	self.v2 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar() 
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v78 = IntVar()
	self.v80 = DoubleVar()
	self.v81 = IntVar()
	self.v82 = StringVar()
	self.v83 = DoubleVar()
	self.v84 = DoubleVar()
	self.v85 = DoubleVar()
	self.v86 = DoubleVar()
	self.v87 = StringVar()
	
	if edit:
		self.v1.set(self.list_objects[self.select]['star1'])
		self.v2.set(self.list_objects[self.select]['star2'])
		self.v30.set(self.list_objects[self.select]['P'][0])
		self.v31.set(self.list_objects[self.select]['P'][1])
		self.v32.set(self.list_objects[self.select]['P'][2])
		self.v33.set(self.list_objects[self.select]['P'][3])
		self.v34.set(self.list_objects[self.select]['P'][4])
		self.v35.set(self.list_objects[self.select]['P'][5])
		self.v36.set(self.list_objects[self.select]['P'][6])
		self.v37.set(self.list_objects[self.select]['P'][7])
		self.v40.set(self.list_objects[self.select]['incl'][0])
		self.v41.set(self.list_objects[self.select]['incl'][1])
		self.v42.set(self.list_objects[self.select]['incl'][2])
		self.v43.set(self.list_objects[self.select]['incl'][3])
		self.v44.set(self.list_objects[self.select]['incl'][4])
		self.v45.set(self.list_objects[self.select]['incl'][5])
		self.v46.set(self.list_objects[self.select]['incl'][6])
		self.v47.set(self.list_objects[self.select]['incl'][7])
		self.v50.set(self.list_objects[self.select]['ecc'][0])
		self.v51.set(self.list_objects[self.select]['ecc'][1])
		self.v52.set(self.list_objects[self.select]['ecc'][2])
		self.v53.set(self.list_objects[self.select]['ecc'][3])
		self.v54.set(self.list_objects[self.select]['ecc'][4])
		self.v55.set(self.list_objects[self.select]['ecc'][5])
		self.v56.set(self.list_objects[self.select]['ecc'][6])
		self.v57.set(self.list_objects[self.select]['ecc'][7])
		self.v60.set(self.list_objects[self.select]['omega'][0])
		self.v61.set(self.list_objects[self.select]['omega'][1])
		self.v62.set(self.list_objects[self.select]['omega'][2])
		self.v63.set(self.list_objects[self.select]['omega'][3])
		self.v64.set(self.list_objects[self.select]['omega'][4])
		self.v65.set(self.list_objects[self.select]['omega'][5])
		self.v66.set(self.list_objects[self.select]['omega'][6])
		self.v67.set(self.list_objects[self.select]['omega'][7])
		if self.list_objects[self.select].has_key('T0'):
			self.v70.set(self.list_objects[self.select]['T0'][0])
			self.v71.set(self.list_objects[self.select]['T0'][1]) 
			self.v72.set(self.list_objects[self.select]['T0'][2])
			self.v73.set(self.list_objects[self.select]['T0'][3])
			self.v74.set(self.list_objects[self.select]['T0'][4])
			self.v75.set(self.list_objects[self.select]['T0'][5])
			self.v76.set(self.list_objects[self.select]['T0'][6])
			self.v77.set(self.list_objects[self.select]['T0'][7])
			self.v78.set(1)
			self.v82.set('Normal')
		elif self.list_objects[self.select].has_key('Tp'):
			self.v80.set(self.list_objects[self.select]['Tp'][0])
			self.v81.set(self.list_objects[self.select]['Tp'][1])
			self.v82.set(self.list_objects[self.select]['Tp'][2])
			self.v83.set(self.list_objects[self.select]['Tp'][3])
			self.v84.set(self.list_objects[self.select]['Tp'][4])
			self.v85.set(self.list_objects[self.select]['Tp'][5])
			self.v86.set(self.list_objects[self.select]['Tp'][6])
			self.v87.set(self.list_objects[self.select]['Tp'][7])
			self.v78.set(0)
			self.v72.set('Normal')
			
			
	else:
		self.v1.set(self.star_list[0])
		self.v2.set(self.star_list[1])
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')
		self.v82.set('Normal')

	OptionMenu(self.wbinary, self.v1, *self.star_list).grid(row=2, column=1, columnspan=8, sticky=W+E)

	OptionMenu(self.wbinary, self.v2, *self.star_list).grid(row=3, column=1, columnspan=8, sticky=W+E)
	
	Entry(self.wbinary, textvariable=self.v30, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wbinary, variable=self.v31).grid(row=5, column=2)
	OptionMenu(self.wbinary, self.v32, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wbinary, textvariable=self.v33, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wbinary, textvariable=self.v34, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wbinary, textvariable=self.v35, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wbinary, textvariable=self.v36, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wbinary, textvariable=self.v37, width=10, bg='white').grid(row=5, column=8)
	
	Entry(self.wbinary, textvariable=self.v40, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wbinary, variable=self.v41).grid(row=6, column=2)
	OptionMenu(self.wbinary, self.v42, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wbinary, textvariable=self.v43, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wbinary, textvariable=self.v44, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wbinary, textvariable=self.v45, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wbinary, textvariable=self.v46, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wbinary, textvariable=self.v47, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wbinary, textvariable=self.v50, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wbinary, variable=self.v51).grid(row=7, column=2)
	OptionMenu(self.wbinary, self.v52, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wbinary, textvariable=self.v53, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wbinary, textvariable=self.v54, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wbinary, textvariable=self.v55, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wbinary, textvariable=self.v56, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wbinary, textvariable=self.v57, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wbinary, textvariable=self.v60, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wbinary, variable=self.v61).grid(row=8, column=2)
	OptionMenu(self.wbinary, self.v62, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wbinary, textvariable=self.v63, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wbinary, textvariable=self.v64, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wbinary, textvariable=self.v65, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wbinary, textvariable=self.v66, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wbinary, textvariable=self.v67, width=10, bg='white').grid(row=8, column=8)

	Entry(self.wbinary, textvariable=self.v70, width=10, bg='white').grid(row=9, column=1)
	Checkbutton(self.wbinary, variable=self.v71).grid(row=9, column=2)
	OptionMenu(self.wbinary, self.v72, *self.list_prior_type).grid(row=9, column=3)
	Entry(self.wbinary, textvariable=self.v73, width=10, bg='white').grid(row=9, column=4)
	Entry(self.wbinary, textvariable=self.v74, width=10, bg='white').grid(row=9, column=5)
	Entry(self.wbinary, textvariable=self.v75, width=10, bg='white').grid(row=9, column=6)
	Entry(self.wbinary, textvariable=self.v76, width=10, bg='white').grid(row=9, column=7)
	Entry(self.wbinary, textvariable=self.v77, width=10, bg='white').grid(row=9, column=8)
	Radiobutton(self.wbinary, variable=self.v78, value=1).grid(row=9, column=9)

	Entry(self.wbinary, textvariable=self.v80, width=10, bg='white').grid(row=10, column=1)
	Checkbutton(self.wbinary, variable=self.v81).grid(row=10, column=2)
	OptionMenu(self.wbinary, self.v82, *self.list_prior_type).grid(row=10, column=3)
	Entry(self.wbinary, textvariable=self.v83, width=10, bg='white').grid(row=10, column=4)
	Entry(self.wbinary, textvariable=self.v84, width=10, bg='white').grid(row=10, column=5)
	Entry(self.wbinary, textvariable=self.v85, width=10, bg='white').grid(row=10, column=6)
	Entry(self.wbinary, textvariable=self.v86, width=10, bg='white').grid(row=10, column=7)
	Entry(self.wbinary, textvariable=self.v87, width=10, bg='white').grid(row=10, column=8)
	Radiobutton(self.wbinary, variable=self.v78, value=0).grid(row=10, column=9)
	
	Button(self.wbinary, text='SAVE & QUIT', command=lambda: self.save_binary(quit=1,save_edit=edit)).grid(row=11, column = 6)
	Button(self.wbinary, text='SAVE', command=lambda: self.save_binary(save_edit=edit)).grid(row=11, column = 7)
	Button(self.wbinary, text='QUIT', command=self.wbinary.destroy).grid(row=11, column = 8)


def define_triple(self, edit = None) :
	self.wtriple=Toplevel()
	Label(self.wtriple, text='Define a new muliple system',font=('Times', 16, 'bold')).grid(row=0, columnspan = 10)
	Label(self.wtriple, text='Object 1', anchor=W, justify='left').grid(row=2)
	Label(self.wtriple, text='Object 2', anchor=W, justify='left').grid(row=3)
	Label(self.wtriple, text='Period [days]', anchor=W, justify='left').grid(row=5)
	Label(self.wtriple, text='Inclination [deg]', anchor=W, justify='left').grid(row=6)
	Label(self.wtriple, text='Eccentricity', anchor=W, justify='left').grid(row=7)
	Label(self.wtriple, text='Periastron argument [deg]', anchor=W, justify='left').grid(row=8)
	Label(self.wtriple, text='Transit epoch [BJD]', anchor=W, justify='left').grid(row=9)
	Label(self.wtriple, text='Periastron epoch [BJD]', anchor=W, justify='left').grid(row=10)
	
	Label(self.wtriple, text='Parameter').grid(row=4, column=0)
	Label(self.wtriple, text='Value').grid(row=4, column=1)
	Label(self.wtriple, text='jump ?').grid(row=4, column=2)
	Label(self.wtriple, text='prior').grid(row=4, column=3)
	Label(self.wtriple, text='Value1').grid(row=4, column=4)
	Label(self.wtriple, text='Value2').grid(row=4, column=5)
	Label(self.wtriple, text='Value3').grid(row=4, column=6)
	Label(self.wtriple, text='Value4').grid(row=4, column=7)
	Label(self.wtriple, text='File').grid(row=4, column=8)
	Label(self.wtriple, text='select').grid(row=4, column=9)

	self.v1 = StringVar()
	self.v2 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar() 
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v78 = IntVar()
	self.v80 = DoubleVar()
	self.v81 = IntVar()
	self.v82 = StringVar()
	self.v83 = DoubleVar()
	self.v84 = DoubleVar()
	self.v85 = DoubleVar()
	self.v86 = DoubleVar()
	self.v87 = StringVar()
	
	if edit:
		self.v1.set(self.list_objects[self.select]['object1'])
		self.v2.set(self.list_objects[self.select]['object2'])
		self.v30.set(self.list_objects[self.select]['P'][0])
		self.v31.set(self.list_objects[self.select]['P'][1])
		self.v32.set(self.list_objects[self.select]['P'][2])
		self.v33.set(self.list_objects[self.select]['P'][3])
		self.v34.set(self.list_objects[self.select]['P'][4])
		self.v35.set(self.list_objects[self.select]['P'][5])
		self.v36.set(self.list_objects[self.select]['P'][6])
		self.v37.set(self.list_objects[self.select]['P'][7])
		self.v40.set(self.list_objects[self.select]['incl'][0])
		self.v41.set(self.list_objects[self.select]['incl'][1])
		self.v42.set(self.list_objects[self.select]['incl'][2])
		self.v43.set(self.list_objects[self.select]['incl'][3])
		self.v44.set(self.list_objects[self.select]['incl'][4])
		self.v45.set(self.list_objects[self.select]['incl'][5])
		self.v46.set(self.list_objects[self.select]['incl'][6])
		self.v47.set(self.list_objects[self.select]['incl'][7])
		self.v50.set(self.list_objects[self.select]['ecc'][0])
		self.v51.set(self.list_objects[self.select]['ecc'][1])
		self.v52.set(self.list_objects[self.select]['ecc'][2])
		self.v53.set(self.list_objects[self.select]['ecc'][3])
		self.v54.set(self.list_objects[self.select]['ecc'][4])
		self.v55.set(self.list_objects[self.select]['ecc'][5])
		self.v56.set(self.list_objects[self.select]['ecc'][6])
		self.v57.set(self.list_objects[self.select]['ecc'][7])
		self.v60.set(self.list_objects[self.select]['omega'][0])
		self.v61.set(self.list_objects[self.select]['omega'][1])
		self.v62.set(self.list_objects[self.select]['omega'][2])
		self.v63.set(self.list_objects[self.select]['omega'][3])
		self.v64.set(self.list_objects[self.select]['omega'][4])
		self.v65.set(self.list_objects[self.select]['omega'][5])
		self.v66.set(self.list_objects[self.select]['omega'][6])
		self.v67.set(self.list_objects[self.select]['omega'][7])
		if self.list_objects[self.select].has_key('T0'):
			self.v70.set(self.list_objects[self.select]['T0'][0])
			self.v71.set(self.list_objects[self.select]['T0'][1]) 
			self.v72.set(self.list_objects[self.select]['T0'][2])
			self.v73.set(self.list_objects[self.select]['T0'][3])
			self.v74.set(self.list_objects[self.select]['T0'][4])
			self.v75.set(self.list_objects[self.select]['T0'][5])
			self.v76.set(self.list_objects[self.select]['T0'][6])
			self.v77.set(self.list_objects[self.select]['T0'][7])
			self.v78.set(1)
			self.v82.set('Normal')
		elif self.list_objects[self.select].has_key('Tp'):
			self.v80.set(self.list_objects[self.select]['Tp'][0])
			self.v81.set(self.list_objects[self.select]['Tp'][1])
			self.v82.set(self.list_objects[self.select]['Tp'][2])
			self.v83.set(self.list_objects[self.select]['Tp'][3])
			self.v84.set(self.list_objects[self.select]['Tp'][4])
			self.v85.set(self.list_objects[self.select]['Tp'][5])
			self.v86.set(self.list_objects[self.select]['Tp'][6])
			self.v87.set(self.list_objects[self.select]['Tp'][7])
			self.v78.set(0)
			self.v72.set('Normal')
		
	else:
		self.v1.set(self.object_list[0])
		self.v2.set(self.object_list[1])
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')
		self.v82.set('Normal')

	OptionMenu(self.wtriple, self.v1, *self.object_list).grid(row=2, column=1, columnspan=8, sticky=W+E)

	OptionMenu(self.wtriple, self.v2, *self.object_list).grid(row=3, column=1, columnspan=8, sticky=W+E)
	
	Entry(self.wtriple, textvariable=self.v30, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wtriple, variable=self.v31).grid(row=5, column=2)
	OptionMenu(self.wtriple, self.v32, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wtriple, textvariable=self.v33, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wtriple, textvariable=self.v34, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wtriple, textvariable=self.v35, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wtriple, textvariable=self.v36, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wtriple, textvariable=self.v37, width=10, bg='white').grid(row=5, column=8)
	
	Entry(self.wtriple, textvariable=self.v40, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wtriple, variable=self.v41).grid(row=6, column=2)
	OptionMenu(self.wtriple, self.v42, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wtriple, textvariable=self.v43, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wtriple, textvariable=self.v44, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wtriple, textvariable=self.v45, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wtriple, textvariable=self.v46, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wtriple, textvariable=self.v47, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wtriple, textvariable=self.v50, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wtriple, variable=self.v51).grid(row=7, column=2)
	OptionMenu(self.wtriple, self.v52, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wtriple, textvariable=self.v53, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wtriple, textvariable=self.v54, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wtriple, textvariable=self.v55, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wtriple, textvariable=self.v56, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wtriple, textvariable=self.v57, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wtriple, textvariable=self.v60, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wtriple, variable=self.v61).grid(row=8, column=2)
	OptionMenu(self.wtriple, self.v62, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wtriple, textvariable=self.v63, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wtriple, textvariable=self.v64, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wtriple, textvariable=self.v65, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wtriple, textvariable=self.v66, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wtriple, textvariable=self.v67, width=10, bg='white').grid(row=8, column=8)

	Entry(self.wtriple, textvariable=self.v70, width=10, bg='white').grid(row=9, column=1)
	Checkbutton(self.wtriple, variable=self.v71).grid(row=9, column=2)
	OptionMenu(self.wtriple, self.v72, *self.list_prior_type).grid(row=9, column=3)
	Entry(self.wtriple, textvariable=self.v73, width=10, bg='white').grid(row=9, column=4)
	Entry(self.wtriple, textvariable=self.v74, width=10, bg='white').grid(row=9, column=5)
	Entry(self.wtriple, textvariable=self.v75, width=10, bg='white').grid(row=9, column=6)
	Entry(self.wtriple, textvariable=self.v76, width=10, bg='white').grid(row=9, column=7)
	Entry(self.wtriple, textvariable=self.v77, width=10, bg='white').grid(row=9, column=8)
	Radiobutton(self.wtriple, variable=self.v78, value=1).grid(row=9, column=9)

	Entry(self.wtriple, textvariable=self.v80, width=10, bg='white').grid(row=10, column=1)
	Checkbutton(self.wtriple, variable=self.v81).grid(row=10, column=2)
	OptionMenu(self.wtriple, self.v82, *self.list_prior_type).grid(row=10, column=3)
	Entry(self.wtriple, textvariable=self.v83, width=10, bg='white').grid(row=10, column=4)
	Entry(self.wtriple, textvariable=self.v84, width=10, bg='white').grid(row=10, column=5)
	Entry(self.wtriple, textvariable=self.v85, width=10, bg='white').grid(row=10, column=6)
	Entry(self.wtriple, textvariable=self.v86, width=10, bg='white').grid(row=10, column=7)
	Entry(self.wtriple, textvariable=self.v87, width=10, bg='white').grid(row=10, column=8)
	Radiobutton(self.wtriple, variable=self.v78, value=0).grid(row=10, column=9)
	
	Button(self.wtriple, text='SAVE & QUIT', command=lambda: self.save_triple(quit=1,save_edit=edit)).grid(row=11, column = 6)
	Button(self.wtriple, text='SAVE', command=lambda: self.save_triple(save_edit=edit)).grid(row=11, column = 7)
	Button(self.wtriple, text='QUIT', command=self.wtriple.destroy).grid(row=11, column = 8)


def define_plansys(self, edit = None) :
	self.wplansys=Toplevel()
	Label(self.wplansys, text='Define a new planetary system',font=('Times', 16, 'bold')).grid(row=0, columnspan = 6)
	Label(self.wplansys, text='Star', anchor=W, justify='left').grid(row=2)
	Label(self.wplansys, text='Planet 1', anchor=W, justify='left').grid(row=3)
	Label(self.wplansys, text='Planet 2', anchor=W, justify='left').grid(row=4)
	Label(self.wplansys, text='Planet 3', anchor=W, justify='left').grid(row=5)
	Label(self.wplansys, text='Planet 4', anchor=W, justify='left').grid(row=6)
	Label(self.wplansys, text='Planet 5', anchor=W, justify='left').grid(row=7)
	Label(self.wplansys, text='Planet 6', anchor=W, justify='left').grid(row=8)
	Label(self.wplansys, text='Planet 7', anchor=W, justify='left').grid(row=9)
	Label(self.wplansys, text='Planet 8', anchor=W, justify='left').grid(row=10)
	Label(self.wplansys, text='Planet 9', anchor=W, justify='left').grid(row=11)
	
	self.v1 = StringVar()
	self.v2 = StringVar()
	self.v3 = StringVar()
	self.v4 = StringVar()
	self.v5 = StringVar()
	self.v6 = StringVar()
	self.v7 = StringVar()
	self.v8 = StringVar()
	self.v9 = StringVar()
	self.v10 = StringVar()

	if edit:
		self.v1.set(self.list_objects[self.select]['star'])
		self.v2.set(self.list_objects[self.select]['planet1'])
		try : self.v3.set(self.list_objects[self.select]['planet2'])
		except : self.v3.set('None')
		try : self.v4.set(self.list_objects[self.select]['planet3'])
		except : self.v4.set('None')
		try : self.v5.set(self.list_objects[self.select]['planet4'])
		except : self.v5.set('None')
		try : self.v6.set(self.list_objects[self.select]['planet5'])
		except : self.v6.set('None')
		try : self.v7.set(self.list_objects[self.select]['planet6'])
		except : self.v7.set('None')
		try : self.v8.set(self.list_objects[self.select]['planet7'])
		except : self.v8.set('None')
		try : self.v9.set(self.list_objects[self.select]['planet8'])
		except : self.v9.set('None')
		try : self.v10.set(self.list_objects[self.select]['planet9'])
		except : self.v10.set('None')
		
	else:
		self.v1.set(self.star_list[0])
		self.v2.set(self.planet_list[1])
		self.v3.set('None')
		self.v4.set('None')
		self.v5.set('None')
		self.v6.set('None')
		self.v7.set('None')
		self.v8.set('None')
		self.v9.set('None')
		self.v10.set('None')	
	
	OptionMenu(self.wplansys, self.v1, *self.star_list).grid(row=2, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v2, *self.planet_list).grid(row=3, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v3, *self.planet_list).grid(row=4, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v4, *self.planet_list).grid(row=5, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v5, *self.planet_list).grid(row=6, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v6, *self.planet_list).grid(row=7, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v7, *self.planet_list).grid(row=8, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v8, *self.planet_list).grid(row=9, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v9, *self.planet_list).grid(row=10, column=1, columnspan=5, sticky=W+E)
	OptionMenu(self.wplansys, self.v10, *self.planet_list).grid(row=11, column=1, columnspan=5, sticky=W+E)
	
	Button(self.wplansys, text='SAVE & QUIT', command=lambda: self.save_plansys(quit=1,save_edit=edit)).grid(row=12, column = 2)
	Button(self.wplansys, text='SAVE', command=lambda: self.save_plansys(save_edit=edit)).grid(row=12, column = 3)
	Button(self.wplansys, text='QUIT', command=self.wplansys.destroy).grid(row=12, column = 4)



def define_fitobs(self, edit = None) :
	self.wfit=Toplevel()
	Label(self.wfit, text='Define a fitobs module',font=('Times', 16, 'bold')).grid(row=0, columnspan = 10)
	Label(self.wfit, text='System scale a/R', anchor=W, justify='left').grid(row=2)
	Label(self.wfit, text='Radius ratio k', anchor=W, justify='left').grid(row=3)
	Label(self.wfit, text='Period P [days]', anchor=W, justify='left').grid(row=4)
	Label(self.wfit, text='Inclination i [deg]', anchor=W, justify='left').grid(row=5)
	Label(self.wfit, text='Eccentricity e', anchor=W, justify='left').grid(row=6)
	Label(self.wfit, text='Periastron argument w [deg]', anchor=W, justify='left').grid(row=7)
	Label(self.wfit, text='Geometric albedo Ag', anchor=W, justify='left').grid(row=8)
	Label(self.wfit, text='Redistribution factor f', anchor=W, justify='left').grid(row=9)
	Label(self.wfit, text='Transit epoch T0 [BJD]', anchor=W, justify='left').grid(row=10)
	Label(self.wfit, text='Periastron epoch Tp [BJD]', anchor=W, justify='left').grid(row=11)
	Label(self.wfit, text='LD linear coefficient ua', anchor=W, justify='left').grid(row=12)
	Label(self.wfit, text='LD quadratic coefficient ub', anchor=W, justify='left').grid(row=13)
	Label(self.wfit, text='Gravity darkening coefficient gd', anchor=W, justify='left').grid(row=14)
	Label(self.wfit, text='RV semi-amplitude K [km/s]', anchor=W, justify='left').grid(row=15)
	Label(self.wfit, text='Mass ratio', anchor=W, justify='left').grid(row=16)
	Label(self.wfit, text='Systemic RV v0 [km/s]', anchor=W, justify='left').grid(row=17)
	Label(self.wfit, text='vsini [km/s]', anchor=W, justify='left').grid(row=18)
	Label(self.wfit, text='Spin-Orbit angle [deg]', anchor=W, justify='left').grid(row=19)

	
	Label(self.wfit, text='Parameter').grid(row=1, column=0)
	Label(self.wfit, text='Value').grid(row=1, column=1)
	Label(self.wfit, text='jump ?').grid(row=1, column=2)
	Label(self.wfit, text='prior').grid(row=1, column=3)
	Label(self.wfit, text='Value1').grid(row=1, column=4)
	Label(self.wfit, text='Value2').grid(row=1, column=5)
	Label(self.wfit, text='Value3').grid(row=1, column=6)
	Label(self.wfit, text='Value4').grid(row=1, column=7)
	Label(self.wfit, text='File').grid(row=1, column=8)
	Label(self.wfit, text='select').grid(row=1, column=9)
	
	self.v10 = DoubleVar()
	self.v11 = IntVar()
	self.v12 = StringVar()
	self.v13 = DoubleVar()
	self.v14 = DoubleVar()
	self.v15 = DoubleVar()
	self.v16 = DoubleVar()
	self.v17 = StringVar()
	self.v20 = DoubleVar()
	self.v21 = IntVar()
	self.v22 = StringVar()
	self.v23 = DoubleVar()
	self.v24 = DoubleVar()
	self.v25 = DoubleVar()
	self.v26 = DoubleVar()
	self.v27 = StringVar()
	self.v30 = DoubleVar()
	self.v31 = IntVar()
	self.v32 = StringVar()
	self.v33 = DoubleVar()
	self.v34 = DoubleVar()
	self.v35 = DoubleVar()
	self.v36 = DoubleVar()
	self.v37 = StringVar()
	self.v40 = DoubleVar()
	self.v41 = IntVar()
	self.v42 = StringVar()
	self.v43 = DoubleVar()
	self.v44 = DoubleVar()
	self.v45 = DoubleVar()
	self.v46 = DoubleVar()
	self.v47 = StringVar()
	self.v50 = DoubleVar()
	self.v51 = IntVar()
	self.v52 = StringVar()
	self.v53 = DoubleVar()
	self.v54 = DoubleVar()
	self.v55 = DoubleVar()
	self.v56 = DoubleVar()
	self.v57 = StringVar()
	self.v60 = DoubleVar()
	self.v61 = IntVar()
	self.v62 = StringVar()
	self.v63 = DoubleVar()
	self.v64 = DoubleVar()
	self.v65 = DoubleVar()
	self.v66 = DoubleVar()
	self.v67 = StringVar()
	self.v70 = DoubleVar()
	self.v71 = IntVar() 
	self.v72 = StringVar()
	self.v73 = DoubleVar()
	self.v74 = DoubleVar()
	self.v75 = DoubleVar()
	self.v76 = DoubleVar()
	self.v77 = StringVar()
	self.v80 = DoubleVar()
	self.v81 = IntVar()
	self.v82 = StringVar()
	self.v83 = DoubleVar()
	self.v84 = DoubleVar()
	self.v85 = DoubleVar()
	self.v86 = DoubleVar()
	self.v87 = StringVar()
	self.v90 = DoubleVar()
	self.v91 = IntVar()
	self.v92 = StringVar()
	self.v93 = DoubleVar()
	self.v94 = DoubleVar()
	self.v95 = DoubleVar()
	self.v96 = DoubleVar()
	self.v97 = StringVar()
	self.v98 = IntVar()
	self.v100 = DoubleVar()
	self.v101 = IntVar()
	self.v102 = StringVar()
	self.v103 = DoubleVar()
	self.v104 = DoubleVar()
	self.v105 = DoubleVar()
	self.v106 = DoubleVar()
	self.v107 = StringVar()
	self.v110 = DoubleVar()
	self.v111 = IntVar()
	self.v112 = StringVar()
	self.v113 = DoubleVar()
	self.v114 = DoubleVar()
	self.v115 = DoubleVar()
	self.v116 = DoubleVar()
	self.v117 = StringVar()
	self.v120 = DoubleVar()
	self.v121 = IntVar()
	self.v122 = StringVar()
	self.v123 = DoubleVar()
	self.v124 = DoubleVar()
	self.v125 = DoubleVar()
	self.v126 = DoubleVar()
	self.v127 = StringVar()
	self.v130 = DoubleVar()
	self.v131 = IntVar()
	self.v132 = StringVar()
	self.v133 = DoubleVar()
	self.v134 = DoubleVar()
	self.v135 = DoubleVar()
	self.v136 = DoubleVar()
	self.v137 = StringVar()
	self.v140 = DoubleVar()
	self.v141 = IntVar()
	self.v142 = StringVar()
	self.v143 = DoubleVar()
	self.v144 = DoubleVar()
	self.v145 = DoubleVar()
	self.v146 = DoubleVar()
	self.v147 = StringVar()
	self.v150 = DoubleVar()
	self.v151 = IntVar()
	self.v152 = StringVar()
	self.v153 = DoubleVar()
	self.v154 = DoubleVar()
	self.v155 = DoubleVar()
	self.v156 = DoubleVar()
	self.v157 = StringVar()
	self.v160 = DoubleVar()
	self.v161 = IntVar()
	self.v162 = StringVar()
	self.v163 = DoubleVar()
	self.v164 = DoubleVar()
	self.v165 = DoubleVar()
	self.v166 = DoubleVar()
	self.v167 = StringVar()
	self.v170 = DoubleVar()
	self.v171 = IntVar()
	self.v172 = StringVar()
	self.v173 = DoubleVar()
	self.v174 = DoubleVar()
	self.v175 = DoubleVar()
	self.v176 = DoubleVar()
	self.v177 = StringVar()
	self.v180 = DoubleVar()
	self.v181 = IntVar()
	self.v182 = StringVar()
	self.v183 = DoubleVar()
	self.v184 = DoubleVar()
	self.v185 = DoubleVar()
	self.v186 = DoubleVar()
	self.v187 = StringVar()

	if edit:
		self.v10.set(self.list_objects[self.select]['AR'][0])
		self.v11.set(self.list_objects[self.select]['AR'][1])
		self.v12.set(self.list_objects[self.select]['AR'][2])
		self.v13.set(self.list_objects[self.select]['AR'][3])
		self.v14.set(self.list_objects[self.select]['AR'][4])
		self.v15.set(self.list_objects[self.select]['AR'][5])
		self.v16.set(self.list_objects[self.select]['AR'][6])
		self.v17.set(self.list_objects[self.select]['AR'][7])
		self.v20.set(self.list_objects[self.select]['k'][0])
		self.v21.set(self.list_objects[self.select]['k'][1])
		self.v22.set(self.list_objects[self.select]['k'][2])
		self.v23.set(self.list_objects[self.select]['k'][3])
		self.v24.set(self.list_objects[self.select]['k'][4])
		self.v25.set(self.list_objects[self.select]['k'][5])
		self.v26.set(self.list_objects[self.select]['k'][6])
		self.v27.set(self.list_objects[self.select]['k'][7])
		self.v30.set(self.list_objects[self.select]['P'][0])
		self.v31.set(self.list_objects[self.select]['P'][1])
		self.v32.set(self.list_objects[self.select]['P'][2])
		self.v33.set(self.list_objects[self.select]['P'][3])
		self.v34.set(self.list_objects[self.select]['P'][4])
		self.v35.set(self.list_objects[self.select]['P'][5])
		self.v36.set(self.list_objects[self.select]['P'][6])
		self.v37.set(self.list_objects[self.select]['P'][7])
		self.v40.set(self.list_objects[self.select]['incl'][0])
		self.v41.set(self.list_objects[self.select]['incl'][1])
		self.v42.set(self.list_objects[self.select]['incl'][2])
		self.v43.set(self.list_objects[self.select]['incl'][3])
		self.v44.set(self.list_objects[self.select]['incl'][4])
		self.v45.set(self.list_objects[self.select]['incl'][5])
		self.v46.set(self.list_objects[self.select]['incl'][6])
		self.v47.set(self.list_objects[self.select]['incl'][7])
		self.v50.set(self.list_objects[self.select]['ecc'][0])
		self.v51.set(self.list_objects[self.select]['ecc'][1])
		self.v52.set(self.list_objects[self.select]['ecc'][2])
		self.v53.set(self.list_objects[self.select]['ecc'][3])
		self.v54.set(self.list_objects[self.select]['ecc'][4])
		self.v55.set(self.list_objects[self.select]['ecc'][5])
		self.v56.set(self.list_objects[self.select]['ecc'][6])
		self.v57.set(self.list_objects[self.select]['ecc'][7])
		self.v60.set(self.list_objects[self.select]['omega'][0])
		self.v61.set(self.list_objects[self.select]['omega'][1])
		self.v62.set(self.list_objects[self.select]['omega'][2])
		self.v63.set(self.list_objects[self.select]['omega'][3])
		self.v64.set(self.list_objects[self.select]['omega'][4])
		self.v65.set(self.list_objects[self.select]['omega'][5])
		self.v66.set(self.list_objects[self.select]['omega'][6])
		self.v67.set(self.list_objects[self.select]['omega'][7])
		self.v70.set(self.list_objects[self.select]['albedo'][0])
		self.v71.set(self.list_objects[self.select]['albedo'][1]) 
		self.v72.set(self.list_objects[self.select]['albedo'][2])
		self.v73.set(self.list_objects[self.select]['albedo'][3])
		self.v74.set(self.list_objects[self.select]['albedo'][4])
		self.v75.set(self.list_objects[self.select]['albedo'][5])
		self.v76.set(self.list_objects[self.select]['albedo'][6])
		self.v77.set(self.list_objects[self.select]['albedo'][7])
		self.v80.set(self.list_objects[self.select]['f'][0])
		self.v81.set(self.list_objects[self.select]['f'][1])
		self.v82.set(self.list_objects[self.select]['f'][2])
		self.v83.set(self.list_objects[self.select]['f'][3])
		self.v84.set(self.list_objects[self.select]['f'][4])
		self.v85.set(self.list_objects[self.select]['f'][5])
		self.v86.set(self.list_objects[self.select]['f'][6])
		self.v87.set(self.list_objects[self.select]['f'][7])

		if self.list_objects[self.select].has_key('T0'):
			self.v90.set(self.list_objects[self.select]['T0'][0])
			self.v91.set(self.list_objects[self.select]['T0'][1])
			self.v92.set(self.list_objects[self.select]['T0'][2])
			self.v93.set(self.list_objects[self.select]['T0'][3])
			self.v94.set(self.list_objects[self.select]['T0'][4])
			self.v95.set(self.list_objects[self.select]['T0'][5])
			self.v96.set(self.list_objects[self.select]['T0'][6])
			self.v97.set(self.list_objects[self.select]['T0'][7])
			self.v98.set(1)
			self.v102.set('Normal')
		elif self.list_objects[self.select].has_key('Tp'):
			self.v100.set(self.list_objects[self.select]['Tp'][0])
			self.v101.set(self.list_objects[self.select]['Tp'][1])
			self.v102.set(self.list_objects[self.select]['Tp'][2])
			self.v103.set(self.list_objects[self.select]['Tp'][3])
			self.v104.set(self.list_objects[self.select]['Tp'][4])
			self.v105.set(self.list_objects[self.select]['Tp'][5])
			self.v106.set(self.list_objects[self.select]['Tp'][6])
			self.v107.set(self.list_objects[self.select]['Tp'][7])
			self.v98.set(0)
			self.v92.set('Normal')
		self.v110.set(self.list_objects[self.select]['ua'][0])
		self.v111.set(self.list_objects[self.select]['ua'][1])
		self.v112.set(self.list_objects[self.select]['ua'][2])
		self.v113.set(self.list_objects[self.select]['ua'][3])
		self.v114.set(self.list_objects[self.select]['ua'][4])
		self.v115.set(self.list_objects[self.select]['ua'][5])
		self.v116.set(self.list_objects[self.select]['ua'][6])
		self.v117.set(self.list_objects[self.select]['ua'][7])
		self.v120.set(self.list_objects[self.select]['ub'][0])
		self.v121.set(self.list_objects[self.select]['ub'][1])
		self.v122.set(self.list_objects[self.select]['ub'][2])
		self.v123.set(self.list_objects[self.select]['ub'][3])
		self.v124.set(self.list_objects[self.select]['ub'][4])
		self.v125.set(self.list_objects[self.select]['ub'][5])
		self.v126.set(self.list_objects[self.select]['ub'][6])
		self.v127.set(self.list_objects[self.select]['ub'][7])
		self.v130.set(self.list_objects[self.select]['gd'][0])
		self.v131.set(self.list_objects[self.select]['gd'][1])
		self.v132.set(self.list_objects[self.select]['gd'][2])
		self.v133.set(self.list_objects[self.select]['gd'][3])
		self.v134.set(self.list_objects[self.select]['gd'][4])
		self.v135.set(self.list_objects[self.select]['gd'][5])
		self.v136.set(self.list_objects[self.select]['gd'][6])
		self.v137.set(self.list_objects[self.select]['gd'][7])
		self.v140.set(self.list_objects[self.select]['K'][0])
		self.v141.set(self.list_objects[self.select]['K'][1])
		self.v142.set(self.list_objects[self.select]['K'][2])
		self.v143.set(self.list_objects[self.select]['K'][3])
		self.v144.set(self.list_objects[self.select]['K'][4])
		self.v145.set(self.list_objects[self.select]['K'][5])
		self.v146.set(self.list_objects[self.select]['K'][6])
		self.v147.set(self.list_objects[self.select]['K'][7])
		self.v150.set(self.list_objects[self.select]['Mr'][0])
		self.v151.set(self.list_objects[self.select]['Mr'][1])
		self.v152.set(self.list_objects[self.select]['Mr'][2])
		self.v153.set(self.list_objects[self.select]['Mr'][3])
		self.v154.set(self.list_objects[self.select]['Mr'][4])
		self.v155.set(self.list_objects[self.select]['Mr'][5])
		self.v156.set(self.list_objects[self.select]['Mr'][6])
		self.v157.set(self.list_objects[self.select]['Mr'][7])
		self.v160.set(self.list_objects[self.select]['v0'][0])
		self.v161.set(self.list_objects[self.select]['v0'][1])
		self.v162.set(self.list_objects[self.select]['v0'][2])
		self.v163.set(self.list_objects[self.select]['v0'][3])
		self.v164.set(self.list_objects[self.select]['v0'][4])
		self.v165.set(self.list_objects[self.select]['v0'][5])
		self.v166.set(self.list_objects[self.select]['v0'][6])
		self.v167.set(self.list_objects[self.select]['v0'][7])
		self.v170.set(self.list_objects[self.select]['vsini'][0])
		self.v171.set(self.list_objects[self.select]['vsini'][1])
		self.v172.set(self.list_objects[self.select]['vsini'][2])
		self.v173.set(self.list_objects[self.select]['vsini'][3])
		self.v174.set(self.list_objects[self.select]['vsini'][4])
		self.v175.set(self.list_objects[self.select]['vsini'][5])
		self.v176.set(self.list_objects[self.select]['vsini'][6])
		self.v177.set(self.list_objects[self.select]['vsini'][7])
		self.v180.set(self.list_objects[self.select]['lambda'][0])
		self.v181.set(self.list_objects[self.select]['lambda'][1])
		self.v182.set(self.list_objects[self.select]['lambda'][2])
		self.v183.set(self.list_objects[self.select]['lambda'][3])
		self.v184.set(self.list_objects[self.select]['lambda'][4])
		self.v185.set(self.list_objects[self.select]['lambda'][5])
		self.v186.set(self.list_objects[self.select]['lambda'][6])
		self.v187.set(self.list_objects[self.select]['lambda'][7])



	else:
		self.v12.set('Normal')
		self.v22.set('Normal')
		self.v32.set('Normal')
		self.v42.set('Normal')
		self.v52.set('Normal')
		self.v62.set('Normal')
		self.v72.set('Normal')
		self.v82.set('Normal')
		self.v92.set('Normal')
		self.v102.set('Normal')
		self.v112.set('Normal')
		self.v122.set('Normal')
		self.v132.set('Normal')
		self.v142.set('Normal')
		self.v152.set('Normal')
		self.v162.set('Normal')
		self.v172.set('Normal')
		self.v182.set('Normal')

	Entry(self.wfit, textvariable=self.v10, width=10, bg='white').grid(row=2, column=1)
	Checkbutton(self.wfit, variable=self.v11).grid(row=2, column=2)
	OptionMenu(self.wfit, self.v12, *self.list_prior_type).grid(row=2, column=3)
	Entry(self.wfit, textvariable=self.v13, width=10, bg='white').grid(row=2, column=4)
	Entry(self.wfit, textvariable=self.v14, width=10, bg='white').grid(row=2, column=5)
	Entry(self.wfit, textvariable=self.v15, width=10, bg='white').grid(row=2, column=6)
	Entry(self.wfit, textvariable=self.v16, width=10, bg='white').grid(row=2, column=7)
	Entry(self.wfit, textvariable=self.v17, width=10, bg='white').grid(row=2, column=8)

	Entry(self.wfit, textvariable=self.v20, width=10, bg='white').grid(row=3, column=1)
	Checkbutton(self.wfit, variable=self.v21).grid(row=3, column=2)
	OptionMenu(self.wfit, self.v22, *self.list_prior_type).grid(row=3, column=3)
	Entry(self.wfit, textvariable=self.v23, width=10, bg='white').grid(row=3, column=4)
	Entry(self.wfit, textvariable=self.v24, width=10, bg='white').grid(row=3, column=5)
	Entry(self.wfit, textvariable=self.v25, width=10, bg='white').grid(row=3, column=6)
	Entry(self.wfit, textvariable=self.v26, width=10, bg='white').grid(row=3, column=7)
	Entry(self.wfit, textvariable=self.v27, width=10, bg='white').grid(row=3, column=8)
	
	Entry(self.wfit, textvariable=self.v30, width=10, bg='white').grid(row=4, column=1)
	Checkbutton(self.wfit, variable=self.v31).grid(row=4, column=2)
	OptionMenu(self.wfit, self.v32, *self.list_prior_type).grid(row=4, column=3)
	Entry(self.wfit, textvariable=self.v33, width=10, bg='white').grid(row=4, column=4)
	Entry(self.wfit, textvariable=self.v34, width=10, bg='white').grid(row=4, column=5)
	Entry(self.wfit, textvariable=self.v35, width=10, bg='white').grid(row=4, column=6)
	Entry(self.wfit, textvariable=self.v36, width=10, bg='white').grid(row=4, column=7)
	Entry(self.wfit, textvariable=self.v37, width=10, bg='white').grid(row=4, column=8)
	
	Entry(self.wfit, textvariable=self.v40, width=10, bg='white').grid(row=5, column=1)
	Checkbutton(self.wfit, variable=self.v41).grid(row=5, column=2)
	OptionMenu(self.wfit, self.v42, *self.list_prior_type).grid(row=5, column=3)
	Entry(self.wfit, textvariable=self.v43, width=10, bg='white').grid(row=5, column=4)
	Entry(self.wfit, textvariable=self.v44, width=10, bg='white').grid(row=5, column=5)
	Entry(self.wfit, textvariable=self.v45, width=10, bg='white').grid(row=5, column=6)
	Entry(self.wfit, textvariable=self.v46, width=10, bg='white').grid(row=5, column=7)
	Entry(self.wfit, textvariable=self.v47, width=10, bg='white').grid(row=5, column=8)

	Entry(self.wfit, textvariable=self.v50, width=10, bg='white').grid(row=6, column=1)
	Checkbutton(self.wfit, variable=self.v51).grid(row=6, column=2)
	OptionMenu(self.wfit, self.v52, *self.list_prior_type).grid(row=6, column=3)
	Entry(self.wfit, textvariable=self.v53, width=10, bg='white').grid(row=6, column=4)
	Entry(self.wfit, textvariable=self.v54, width=10, bg='white').grid(row=6, column=5)
	Entry(self.wfit, textvariable=self.v55, width=10, bg='white').grid(row=6, column=6)
	Entry(self.wfit, textvariable=self.v56, width=10, bg='white').grid(row=6, column=7)
	Entry(self.wfit, textvariable=self.v57, width=10, bg='white').grid(row=6, column=8)

	Entry(self.wfit, textvariable=self.v60, width=10, bg='white').grid(row=7, column=1)
	Checkbutton(self.wfit, variable=self.v61).grid(row=7, column=2)
	OptionMenu(self.wfit, self.v62, *self.list_prior_type).grid(row=7, column=3)
	Entry(self.wfit, textvariable=self.v63, width=10, bg='white').grid(row=7, column=4)
	Entry(self.wfit, textvariable=self.v64, width=10, bg='white').grid(row=7, column=5)
	Entry(self.wfit, textvariable=self.v65, width=10, bg='white').grid(row=7, column=6)
	Entry(self.wfit, textvariable=self.v66, width=10, bg='white').grid(row=7, column=7)
	Entry(self.wfit, textvariable=self.v67, width=10, bg='white').grid(row=7, column=8)

	Entry(self.wfit, textvariable=self.v70, width=10, bg='white').grid(row=8, column=1)
	Checkbutton(self.wfit, variable=self.v71).grid(row=8, column=2)
	OptionMenu(self.wfit, self.v72, *self.list_prior_type).grid(row=8, column=3)
	Entry(self.wfit, textvariable=self.v73, width=10, bg='white').grid(row=8, column=4)
	Entry(self.wfit, textvariable=self.v74, width=10, bg='white').grid(row=8, column=5)
	Entry(self.wfit, textvariable=self.v75, width=10, bg='white').grid(row=8, column=6)
	Entry(self.wfit, textvariable=self.v76, width=10, bg='white').grid(row=8, column=7)
	Entry(self.wfit, textvariable=self.v77, width=10, bg='white').grid(row=8, column=8)

	Entry(self.wfit, textvariable=self.v80, width=10, bg='white').grid(row=9, column=1)
	Checkbutton(self.wfit, variable=self.v81).grid(row=9, column=2)
	OptionMenu(self.wfit, self.v82, *self.list_prior_type).grid(row=9, column=3)
	Entry(self.wfit, textvariable=self.v83, width=10, bg='white').grid(row=9, column=4)
	Entry(self.wfit, textvariable=self.v84, width=10, bg='white').grid(row=9, column=5)
	Entry(self.wfit, textvariable=self.v85, width=10, bg='white').grid(row=9, column=6)
	Entry(self.wfit, textvariable=self.v86, width=10, bg='white').grid(row=9, column=7)
	Entry(self.wfit, textvariable=self.v87, width=10, bg='white').grid(row=9, column=8)

	Entry(self.wfit, textvariable=self.v90, width=10, bg='white').grid(row=10, column=1)
	Checkbutton(self.wfit, variable=self.v91).grid(row=10, column=2)
	OptionMenu(self.wfit, self.v92, *self.list_prior_type).grid(row=10, column=3)
	Entry(self.wfit, textvariable=self.v93, width=10, bg='white').grid(row=10, column=4)
	Entry(self.wfit, textvariable=self.v94, width=10, bg='white').grid(row=10, column=5)
	Entry(self.wfit, textvariable=self.v95, width=10, bg='white').grid(row=10, column=6)
	Entry(self.wfit, textvariable=self.v96, width=10, bg='white').grid(row=10, column=7)
	Entry(self.wfit, textvariable=self.v97, width=10, bg='white').grid(row=10, column=8)
	Radiobutton(self.wfit, variable=self.v98, value=1).grid(row=10, column=9)

	Entry(self.wfit, textvariable=self.v100, width=10, bg='white').grid(row=11, column=1)
	Checkbutton(self.wfit, variable=self.v101).grid(row=11, column=2)
	OptionMenu(self.wfit, self.v102, *self.list_prior_type).grid(row=11, column=3)
	Entry(self.wfit, textvariable=self.v103, width=10, bg='white').grid(row=11, column=4)
	Entry(self.wfit, textvariable=self.v104, width=10, bg='white').grid(row=11, column=5)
	Entry(self.wfit, textvariable=self.v105, width=10, bg='white').grid(row=11, column=6)
	Entry(self.wfit, textvariable=self.v106, width=10, bg='white').grid(row=11, column=7)
	Entry(self.wfit, textvariable=self.v107, width=10, bg='white').grid(row=11, column=8)
	Radiobutton(self.wfit, variable=self.v98, value=0).grid(row=11, column=9)

	Entry(self.wfit, textvariable=self.v110, width=10, bg='white').grid(row=12, column=1)
	Checkbutton(self.wfit, variable=self.v111).grid(row=12, column=2)
	OptionMenu(self.wfit, self.v112, *self.list_prior_type).grid(row=12, column=3)
	Entry(self.wfit, textvariable=self.v113, width=10, bg='white').grid(row=12, column=4)
	Entry(self.wfit, textvariable=self.v114, width=10, bg='white').grid(row=12, column=5)
	Entry(self.wfit, textvariable=self.v115, width=10, bg='white').grid(row=12, column=6)
	Entry(self.wfit, textvariable=self.v116, width=10, bg='white').grid(row=12, column=7)
	Entry(self.wfit, textvariable=self.v117, width=10, bg='white').grid(row=12, column=8)

	Entry(self.wfit, textvariable=self.v120, width=10, bg='white').grid(row=13, column=1)
	Checkbutton(self.wfit, variable=self.v121).grid(row=13, column=2)
	OptionMenu(self.wfit, self.v122, *self.list_prior_type).grid(row=13, column=3)
	Entry(self.wfit, textvariable=self.v123, width=10, bg='white').grid(row=13, column=4)
	Entry(self.wfit, textvariable=self.v124, width=10, bg='white').grid(row=13, column=5)
	Entry(self.wfit, textvariable=self.v125, width=10, bg='white').grid(row=13, column=6)
	Entry(self.wfit, textvariable=self.v126, width=10, bg='white').grid(row=13, column=7)
	Entry(self.wfit, textvariable=self.v127, width=10, bg='white').grid(row=13, column=8)

	Entry(self.wfit, textvariable=self.v130, width=10, bg='white').grid(row=14, column=1)
	Checkbutton(self.wfit, variable=self.v131).grid(row=14, column=2)
	OptionMenu(self.wfit, self.v132, *self.list_prior_type).grid(row=14, column=3)
	Entry(self.wfit, textvariable=self.v133, width=10, bg='white').grid(row=14, column=4)
	Entry(self.wfit, textvariable=self.v134, width=10, bg='white').grid(row=14, column=5)
	Entry(self.wfit, textvariable=self.v135, width=10, bg='white').grid(row=14, column=6)
	Entry(self.wfit, textvariable=self.v136, width=10, bg='white').grid(row=14, column=7)
	Entry(self.wfit, textvariable=self.v137, width=10, bg='white').grid(row=14, column=8)

	Entry(self.wfit, textvariable=self.v140, width=10, bg='white').grid(row=15, column=1)
	Checkbutton(self.wfit, variable=self.v141).grid(row=15, column=2)
	OptionMenu(self.wfit, self.v142, *self.list_prior_type).grid(row=15, column=3)
	Entry(self.wfit, textvariable=self.v143, width=10, bg='white').grid(row=15, column=4)
	Entry(self.wfit, textvariable=self.v144, width=10, bg='white').grid(row=15, column=5)
	Entry(self.wfit, textvariable=self.v145, width=10, bg='white').grid(row=15, column=6)
	Entry(self.wfit, textvariable=self.v146, width=10, bg='white').grid(row=15, column=7)
	Entry(self.wfit, textvariable=self.v147, width=10, bg='white').grid(row=15, column=8)

	Entry(self.wfit, textvariable=self.v150, width=10, bg='white').grid(row=16, column=1)
	Checkbutton(self.wfit, variable=self.v151).grid(row=16, column=2)
	OptionMenu(self.wfit, self.v152, *self.list_prior_type).grid(row=16, column=3)
	Entry(self.wfit, textvariable=self.v153, width=10, bg='white').grid(row=16, column=4)
	Entry(self.wfit, textvariable=self.v154, width=10, bg='white').grid(row=16, column=5)
	Entry(self.wfit, textvariable=self.v155, width=10, bg='white').grid(row=16, column=6)
	Entry(self.wfit, textvariable=self.v156, width=10, bg='white').grid(row=16, column=7)
	Entry(self.wfit, textvariable=self.v157, width=10, bg='white').grid(row=16, column=8)

	Entry(self.wfit, textvariable=self.v160, width=10, bg='white').grid(row=17, column=1)
	Checkbutton(self.wfit, variable=self.v161).grid(row=17, column=2)
	OptionMenu(self.wfit, self.v162, *self.list_prior_type).grid(row=17, column=3)
	Entry(self.wfit, textvariable=self.v163, width=10, bg='white').grid(row=17, column=4)
	Entry(self.wfit, textvariable=self.v164, width=10, bg='white').grid(row=17, column=5)
	Entry(self.wfit, textvariable=self.v165, width=10, bg='white').grid(row=17, column=6)
	Entry(self.wfit, textvariable=self.v166, width=10, bg='white').grid(row=17, column=7)
	Entry(self.wfit, textvariable=self.v167, width=10, bg='white').grid(row=17, column=8)

	Entry(self.wfit, textvariable=self.v170, width=10, bg='white').grid(row=18, column=1)
	Checkbutton(self.wfit, variable=self.v171).grid(row=18, column=2)
	OptionMenu(self.wfit, self.v172, *self.list_prior_type).grid(row=18, column=3)
	Entry(self.wfit, textvariable=self.v173, width=10, bg='white').grid(row=18, column=4)
	Entry(self.wfit, textvariable=self.v174, width=10, bg='white').grid(row=18, column=5)
	Entry(self.wfit, textvariable=self.v175, width=10, bg='white').grid(row=18, column=6)
	Entry(self.wfit, textvariable=self.v176, width=10, bg='white').grid(row=18, column=7)
	Entry(self.wfit, textvariable=self.v177, width=10, bg='white').grid(row=18, column=8)

	Entry(self.wfit, textvariable=self.v180, width=10, bg='white').grid(row=19, column=1)
	Checkbutton(self.wfit, variable=self.v181).grid(row=19, column=2)
	OptionMenu(self.wfit, self.v182, *self.list_prior_type).grid(row=19, column=3)
	Entry(self.wfit, textvariable=self.v183, width=10, bg='white').grid(row=19, column=4)
	Entry(self.wfit, textvariable=self.v184, width=10, bg='white').grid(row=19, column=5)
	Entry(self.wfit, textvariable=self.v185, width=10, bg='white').grid(row=19, column=6)
	Entry(self.wfit, textvariable=self.v186, width=10, bg='white').grid(row=19, column=7)
	Entry(self.wfit, textvariable=self.v187, width=10, bg='white').grid(row=19, column=8)


	Button(self.wfit, text='SAVE & QUIT', command=lambda: self.save_fitobs(quit=1,save_edit=edit)).grid(row=21, column = 6)
	Button(self.wfit, text='SAVE', command=lambda: self.save_fitobs(save_edit=edit)).grid(row=21, column = 7)
	Button(self.wfit, text='QUIT', command=self.wfit.destroy).grid(row=21, column = 8)






################################################################################################################
################################################################################################################
################################################################################################################

def edit_list(self, e):
	self.select=str(self.listb.get(self.listb.curselection()[0]))
	if self.select[:-1] == 'target': self.define_target(edit=1)
	elif self.select[:-1] == 'star': self.define_star(edit=1)
	elif self.select[:-1] == 'planet': self.define_planet(edit=1)
	elif self.select[:-1] == 'binary': self.define_binary(edit=1)
	elif self.select[:-1] == 'triple': self.define_triple(edit=1)
	elif self.select[:-1] == 'plansys': self.define_plansys(edit=1)
	elif self.select[:-1] == 'fitobs': self.define_fitobs(edit=1)
	elif self.select[:-1] in self.list_phot : self.phot_data_box(edit=1)
	elif self.select.split('-')[0] in ['HARPS', 'SOPHIE HE', 'SOPHIE HR', 'RotProfile', 'Other'] : self.rv_data_box(edit=1)
	elif self.select[:-1] == 'prior' : self.edit_prior()
	else : 1

################################################################################################################
################################################################################################################
################################################################################################################
